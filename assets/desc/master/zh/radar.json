[
    {
        "name": "id",
        "type": "string",
        "desc": "组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。",
        "children": []
    },
    {
        "name": "zlevel",
        "type": "number",
        "default": "0",
        "desc": "所有图形的 zlevel 值。\n\n`zlevel`用于 Canvas 分层，不同`zlevel`值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的`zlevel`。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。\n\n`zlevel` 大的 Canvas 会放在 `zlevel` 小的 Canvas 的上面。",
        "children": []
    },
    {
        "name": "z",
        "type": "number",
        "default": "2",
        "desc": "组件的所有图形的`z`值。控制图形的前后顺序。`z`值小的图形会被`z`值大的图形覆盖。\n\n`z`相比`zlevel`优先级更低，而且不会创建新的 Canvas。",
        "children": []
    },
    {
        "name": "center",
        "type": "percentvector",
        "default": "['50%', '50%']",
        "desc": "的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标。\n\n支持设置成百分比，设置成百分比时第一项是相对于容器宽度，第二项是相对于容器高度。\n\n**使用示例：**\n```\n// 设置成绝对的像素值\ncenter: [400, 300]\n// 设置成相对的百分比\ncenter: ['50%', '50%']\n```",
        "children": [],
        "dims": "x,y"
    },
    {
        "name": "radius",
        "type": "percentvector",
        "default": "75%",
        "desc": "的半径。可以为如下类型：\n\n+ `number`：直接指定外半径值。\n+ `string`：例如，`'20%'`，表示外半径为可视区尺寸（容器高宽中较小一项）的 20% 长度。\n\n\n+ `Array.<number|string>`：数组的第一项是内半径，第二项是外半径。每一项遵从上述 `number` `string` 的描述。",
        "children": [],
        "dims": "inner,outer"
    },
    {
        "name": "startAngle",
        "type": "number",
        "default": "90",
        "desc": "坐标系起始角度，也就是第一个指示器轴的角度。",
        "children": []
    },
    {
        "name": "axisName",
        "type": "Object",
        "desc": "雷达图每个指示器名称的配置项。",
        "children": [
            {
                "name": "show",
                "type": "boolean",
                "default": "true",
                "desc": "是否显示指示器名称。",
                "children": []
            },
            {
                "name": "formatter",
                "type": [
                    "string",
                    "Function"
                ],
                "desc": "指示器名称显示的格式器。支持字符串和回调函数，如下示例：\n\n```ts\n// 使用字符串模板，模板变量为指示器名称 {value}\nformatter: '【{value}】'\n// 使用回调函数，第一个参数是指示器名称，第二个参数是指示器配置项\nformatter: function (value, indicator) {\nreturn '【' + value + '】';\n}\n```",
                "children": []
            },
            {
                "name": "color",
                "type": "color",
                "default": "'#333'",
                "desc": "文字的颜色。",
                "children": []
            },
            {
                "name": "fontStyle",
                "type": "enum",
                "desc": "文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
                "children": [],
                "options": "'normal','italic','oblique'"
            },
            {
                "name": "fontWeight",
                "type": "enum",
                "desc": "文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
                "children": [],
                "options": "'normal','bold','bolder','lighter'"
            },
            {
                "name": "fontFamily",
                "type": "enum",
                "desc": "文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
                "children": [],
                "options": "'sans-serif','serif','monospace','Arial','Courier New'"
            },
            {
                "name": "fontSize",
                "type": "number",
                "default": "12",
                "desc": "文字的字体大小。",
                "children": [],
                "min": "1",
                "step": "1"
            },
            {
                "name": "lineHeight",
                "type": "number",
                "default": "12",
                "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```ts\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
                "children": [],
                "min": "0",
                "step": "1"
            },
            {
                "name": "backgroundColor",
                "type": "color",
                "default": "'transparent'",
                "desc": "文字块背景色。\n\n可以使用颜色值，例如：`'#123234'`, `'red'`, `'rgba(0,23,11,0.3)'`。\n\n也可以直接使用图片，例如：\n\n```ts\nbackgroundColor: {\nimage: 'xxx/xxx.png'\n// 这里可以是图片的 URL，\n// 或者图片的 dataURI，\n// 或者 HTMLImageElement 对象，\n// 或者 HTMLCanvasElement 对象。\n}\n```\n\n当使用图片的时候，可以使用 `width` 或 `height` 指定高宽，也可以不指定自适应。",
                "children": []
            },
            {
                "name": "borderColor",
                "type": "color",
                "default": "'#fff'",
                "desc": "文字块边框颜色。",
                "children": []
            },
            {
                "name": "borderWidth",
                "type": "number",
                "default": "0",
                "desc": "文字块边框宽度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "borderType",
                "type": "enum",
                "desc": "文字块边框描边类型。\n\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`borderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\nborderType: [5, 10],\n\nborderDashOffset: 5\n}\n```",
                "children": [],
                "options": "'solid','dashed','dotted'"
            },
            {
                "name": "borderDashOffset",
                "type": "number",
                "default": "0",
                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`borderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                "children": [],
                "min": "0",
                "step": "1"
            },
            {
                "name": "borderRadius",
                "type": "vector",
                "default": "0",
                "desc": "文字块的圆角。",
                "children": [],
                "min": "0",
                "dims": "LT,RT, RB, LB"
            },
            {
                "name": "padding",
                "type": "vector",
                "default": "0",
                "desc": "文字块的内边距。例如：\n\n+ `padding: [3, 4, 5, 6]`：表示 `[上, 右, 下, 左]` 的边距。\n+ `padding: 4`：表示 `padding: [4, 4, 4, 4]`。\n+ `padding: [3, 4]`：表示 `padding: [3, 4, 3, 4]`。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。",
                "children": [],
                "min": "0",
                "dims": "T,R,B,L"
            },
            {
                "name": "shadowColor",
                "type": "color",
                "default": "'transparent'",
                "desc": "文字块的背景阴影颜色。",
                "children": []
            },
            {
                "name": "shadowBlur",
                "type": "number",
                "default": "0",
                "desc": "文字块的背景阴影长度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "shadowOffsetX",
                "type": "number",
                "default": "0",
                "desc": "文字块的背景阴影 X 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "shadowOffsetY",
                "type": "number",
                "default": "0",
                "desc": "文字块的背景阴影 Y 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "width",
                "type": [
                    "number",
                    "string"
                ],
                "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                "children": []
            },
            {
                "name": "height",
                "type": [
                    "number",
                    "string"
                ],
                "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                "children": []
            },
            {
                "name": "textBorderColor",
                "type": "color",
                "desc": "文字本身的描边颜色。",
                "children": []
            },
            {
                "name": "textBorderWidth",
                "type": "number",
                "desc": "文字本身的描边宽度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "textBorderType",
                "type": "enum",
                "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
                "children": [],
                "options": "'solid','dashed','dotted'"
            },
            {
                "name": "textBorderDashOffset",
                "type": "number",
                "default": "0",
                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                "children": [],
                "min": "0",
                "step": "1"
            },
            {
                "name": "textShadowColor",
                "type": "color",
                "default": "'transparent'",
                "desc": "文字本身的阴影颜色。",
                "children": []
            },
            {
                "name": "textShadowBlur",
                "type": "number",
                "default": "0",
                "desc": "文字本身的阴影长度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "textShadowOffsetX",
                "type": "number",
                "default": "0",
                "desc": "文字本身的阴影 X 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "textShadowOffsetY",
                "type": "number",
                "default": "0",
                "desc": "文字本身的阴影 Y 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "width",
                "type": "number",
                "default": "100",
                "desc": "文本显示宽度。",
                "children": [],
                "min": "1",
                "max": "500",
                "step": "1"
            },
            {
                "name": "height",
                "type": "number",
                "default": "50",
                "desc": "文本显示高度。",
                "children": [],
                "min": "1",
                "max": "500",
                "step": "1"
            },
            {
                "name": "overflow",
                "type": "enum",
                "desc": "文字超出宽度是否截断或者换行。配置`width`时有效\n\n+ `'truncate'` 截断，并在末尾显示`ellipsis`配置的文本，默认为`...`\n+ `'break'` 换行\n+ `'breakAll'` 换行，跟`'break'`不同的是，在英语等拉丁文中，`'breakAll'`还会强制单词内换行",
                "children": [],
                "options": "'truncate','break','breakAll'"
            },
            {
                "name": "ellipsis",
                "type": "string",
                "default": "'...'",
                "desc": "在`overflow`配置为`'truncate'`的时候，可以通过该属性配置末尾显示的文本。",
                "children": []
            },
            {
                "name": "rich",
                "type": "Object",
                "desc": "在 `rich` 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。\n\n例如：\n\n```ts\nlabel: {\n// 在文本中，可以对部分文本采用 rich 中定义样式。\n// 这里需要在文本中使用标记符号：\n// `{styleName|text content text content}` 标记样式名。\n// 注意，换行仍是使用 '\\n'。\nformatter: [\n'{a|这段文本采用样式a}',\n'{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n].join('\\n'),\n\nrich: {\na: {\ncolor: 'red',\nlineHeight: 10\n},\nb: {\nbackgroundColor: {\nimage: 'xxx/xxx.jpg'\n},\nheight: 40\n},\nx: {\nfontSize: 18,\nfontFamily: 'Microsoft YaHei',\nborderColor: '#449933',\nborderRadius: 4\n},\n...\n}\n}\n```\n\n\n详情参见教程：[富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)",
                "children": [
                    {
                        "name": "<style_name>",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "color",
                                "type": "color",
                                "default": "'#fff'",
                                "desc": "文字的颜色。",
                                "children": []
                            },
                            {
                                "name": "fontStyle",
                                "type": "enum",
                                "desc": "文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
                                "children": [],
                                "options": "'normal','italic','oblique'"
                            },
                            {
                                "name": "fontWeight",
                                "type": "enum",
                                "desc": "文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
                                "children": [],
                                "options": "'normal','bold','bolder','lighter'"
                            },
                            {
                                "name": "fontFamily",
                                "type": "enum",
                                "desc": "文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
                                "children": [],
                                "options": "'sans-serif','serif','monospace','Arial','Courier New'"
                            },
                            {
                                "name": "fontSize",
                                "type": "number",
                                "default": "12",
                                "desc": "文字的字体大小。",
                                "children": [],
                                "min": "1",
                                "step": "1"
                            },
                            {
                                "name": "align",
                                "type": "enum",
                                "desc": "文字水平对齐方式，默认自动。\n\n可选：\n+ `'left'`\n+ `'center'`\n+ `'right'`\n\n\n\n`rich` 中如果没有设置 `align`，则会取父层级的 `align`。例如：\n\n```ts\n{\nalign: right,\nrich: {\na: {\n// 没有设置 `align`，则 `align` 为 right\n}\n}\n}\n```",
                                "children": [],
                                "options": "'left','center','right'"
                            },
                            {
                                "name": "verticalAlign",
                                "type": "enum",
                                "desc": "文字垂直对齐方式，默认自动。\n\n可选：\n+ `'top'`\n+ `'middle'`\n+ `'bottom'`\n\n\n\n`rich` 中如果没有设置 `verticalAlign`，则会取父层级的 `verticalAlign`。例如：\n\n```ts\n{\nverticalAlign: bottom,\nrich: {\na: {\n// 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n}\n}\n}\n```",
                                "children": [],
                                "options": "'top','middle','bottom'"
                            },
                            {
                                "name": "lineHeight",
                                "type": "number",
                                "default": "12",
                                "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```ts\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "backgroundColor",
                                "type": "color",
                                "default": "'transparent'",
                                "desc": "文字块背景色。\n\n可以使用颜色值，例如：`'#123234'`, `'red'`, `'rgba(0,23,11,0.3)'`。\n\n也可以直接使用图片，例如：\n\n```ts\nbackgroundColor: {\nimage: 'xxx/xxx.png'\n// 这里可以是图片的 URL，\n// 或者图片的 dataURI，\n// 或者 HTMLImageElement 对象，\n// 或者 HTMLCanvasElement 对象。\n}\n```\n\n当使用图片的时候，可以使用 `width` 或 `height` 指定高宽，也可以不指定自适应。",
                                "children": []
                            },
                            {
                                "name": "borderColor",
                                "type": "color",
                                "default": "'#fff'",
                                "desc": "文字块边框颜色。",
                                "children": []
                            },
                            {
                                "name": "borderWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块边框宽度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "borderType",
                                "type": "enum",
                                "desc": "文字块边框描边类型。\n\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`borderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\nborderType: [5, 10],\n\nborderDashOffset: 5\n}\n```",
                                "children": [],
                                "options": "'solid','dashed','dotted'"
                            },
                            {
                                "name": "borderDashOffset",
                                "type": "number",
                                "default": "0",
                                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`borderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "borderRadius",
                                "type": "vector",
                                "default": "0",
                                "desc": "文字块的圆角。",
                                "children": [],
                                "min": "0",
                                "dims": "LT,RT, RB, LB"
                            },
                            {
                                "name": "padding",
                                "type": "vector",
                                "default": "0",
                                "desc": "文字块的内边距。例如：\n\n+ `padding: [3, 4, 5, 6]`：表示 `[上, 右, 下, 左]` 的边距。\n+ `padding: 4`：表示 `padding: [4, 4, 4, 4]`。\n+ `padding: [3, 4]`：表示 `padding: [3, 4, 3, 4]`。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。",
                                "children": [],
                                "min": "0",
                                "dims": "T,R,B,L"
                            },
                            {
                                "name": "shadowColor",
                                "type": "color",
                                "default": "'transparent'",
                                "desc": "文字块的背景阴影颜色。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块的背景阴影长度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块的背景阴影 X 偏移。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块的背景阴影 Y 偏移。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "width",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                                "children": []
                            },
                            {
                                "name": "height",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                                "children": []
                            },
                            {
                                "name": "textBorderColor",
                                "type": "color",
                                "desc": "文字本身的描边颜色。",
                                "children": []
                            },
                            {
                                "name": "textBorderWidth",
                                "type": "number",
                                "desc": "文字本身的描边宽度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "textBorderType",
                                "type": "enum",
                                "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
                                "children": [],
                                "options": "'solid','dashed','dotted'"
                            },
                            {
                                "name": "textBorderDashOffset",
                                "type": "number",
                                "default": "0",
                                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "textShadowColor",
                                "type": "color",
                                "default": "'transparent'",
                                "desc": "文字本身的阴影颜色。",
                                "children": []
                            },
                            {
                                "name": "textShadowBlur",
                                "type": "number",
                                "default": "0",
                                "desc": "文字本身的阴影长度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "textShadowOffsetX",
                                "type": "number",
                                "default": "0",
                                "desc": "文字本身的阴影 X 偏移。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "textShadowOffsetY",
                                "type": "number",
                                "default": "0",
                                "desc": "文字本身的阴影 Y 偏移。",
                                "children": [],
                                "step": "0.5"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "name": "nameGap",
        "type": "number",
        "default": "15",
        "desc": "指示器名称和指示器轴的距离。",
        "children": [],
        "step": "1"
    },
    {
        "name": "splitNumber",
        "type": "number",
        "default": "5",
        "desc": "指示器轴的分割段数。",
        "children": [],
        "step": "1"
    },
    {
        "name": "shape",
        "type": "enum",
        "desc": "雷达图绘制类型，支持 `'polygon'` 和 `'circle'`。",
        "children": [],
        "options": "'polygon','circle'"
    },
    {
        "name": "scale",
        "type": "boolean",
        "default": "false",
        "desc": "是否是脱离 0 值比例。设置成 `true` 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。",
        "children": []
    },
    {
        "name": "silent",
        "type": "boolean",
        "default": "false",
        "desc": "坐标轴是否是静态无法交互。",
        "children": []
    },
    {
        "name": "triggerEvent",
        "type": "boolean",
        "default": "false",
        "desc": "坐标轴的标签是否响应和触发鼠标事件，默认不响应。\n\n事件参数如下：\n\n```ts\n{\n// 组件类型，xAxis, yAxis, radiusAxis, angleAxis\n// 对应组件类型都会有一个属性表示组件的 index，例如 xAxis 就是 xAxisIndex\ncomponentType: string,\n// 未格式化过的刻度值, 点击刻度标签有效\nvalue: '',\n// 坐标轴名称, 点击坐标轴名称有效\nname: ''\n}\n```",
        "children": []
    },
    {
        "name": "axisLine",
        "type": "Object",
        "desc": "坐标轴轴线相关设置。",
        "children": [
            {
                "name": "show",
                "type": "boolean",
                "default": "true",
                "desc": "是否显示坐标轴轴线。",
                "children": []
            },
            {
                "name": "symbol",
                "type": [
                    "string",
                    "Array"
                ],
                "default": "'none'",
                "desc": "轴线两边的箭头。可以是字符串，表示两端使用同样的箭头；或者长度为 2 的字符串数组，分别表示两端的箭头。默认不显示箭头，即 `'none'`。两端都显示箭头可以设置为 `'arrow'`，只在末端显示箭头可以设置为 `['none', 'arrow']`。",
                "children": []
            },
            {
                "name": "symbolSize",
                "type": "vector",
                "default": "[10, 15]",
                "desc": "轴线两边的箭头的大小，第一个数字表示宽度（垂直坐标轴方向），第二个数字表示高度（平行坐标轴方向）。",
                "children": []
            },
            {
                "name": "symbolOffset",
                "type": "vector",
                "default": "[0, 0]",
                "desc": "轴线两边的箭头的偏移，如果是数组，第一个数字表示起始箭头的偏移，第二个数字表示末端箭头的偏移；如果是数字，表示这两个箭头使用同样的偏移。",
                "children": []
            },
            {
                "name": "lineStyle",
                "type": "Object",
                "desc": "",
                "children": [
                    {
                        "name": "color",
                        "type": "color",
                        "default": "'#333'",
                        "desc": "坐标轴线线的颜色。\n\n\n\n\n\n> 支持使用`rgb(255,255,255)`，`rgba(255,255,255,1)`，`#fff`等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[option.color](https://echarts.apache.org/zh/option.html#color)",
                        "children": []
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "default": "1",
                        "desc": "坐标轴线线宽。",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "type",
                        "type": "enum",
                        "desc": "线的类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`dashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntype: [5, 10],\n\ndashOffset: 5\n}\n```",
                        "children": [],
                        "options": "'solid','dashed','dotted'"
                    },
                    {
                        "name": "dashOffset",
                        "type": "number",
                        "default": "0",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`type`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "cap",
                        "type": "enum",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于指定线段末端的绘制方式，可以是：\n+ `'butt'`: 线段末端以方形结束。\n+ `'round'`: 线段末端以圆形结束。\n+ `'square'`: 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 `'butt'`。 更多详情可以参考 MDN [lineCap](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap)。",
                        "children": [],
                        "options": "'butt','round','square'"
                    },
                    {
                        "name": "join",
                        "type": "enum",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。\n\n可以是：\n+ `'bevel'`: 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n+ `'round'`: 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n+ `'miter'`: 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过\n`miterLimit`\n属性看到效果。\n\n默认值为 `'bevel'`。 更多详情可以参考 MDN [lineJoin](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin)。",
                        "children": [],
                        "options": "'bevel','round','miter'"
                    },
                    {
                        "name": "miterLimit",
                        "type": "number",
                        "default": "10",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置斜接面限制比例。只有当\n`join`\n为 `miter` 时，\n`miterLimit`\n才有效。\n\n默认值为 `10`。负数、`0`、`Infinity` 和 `NaN` 均会被忽略。\n\n更多详情可以参考 MDN [miterLimit](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit)。",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "shadowBlur",
                        "type": "number",
                        "default": "",
                        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```ts\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "shadowColor",
                        "type": "color",
                        "default": "",
                        "desc": "阴影颜色。支持的格式同`color`。",
                        "children": []
                    },
                    {
                        "name": "shadowOffsetX",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影水平方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "shadowOffsetY",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影垂直方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "opacity",
                        "type": "number",
                        "default": "1",
                        "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。",
                        "children": [],
                        "min": "0",
                        "max": "1",
                        "step": "0.01"
                    }
                ]
            }
        ]
    },
    {
        "name": "axisTick",
        "type": "Object",
        "desc": "坐标轴刻度相关设置。",
        "children": [
            {
                "name": "show",
                "type": "boolean",
                "default": "true",
                "desc": "是否显示坐标轴刻度。",
                "children": []
            },
            {
                "name": "length",
                "type": "number",
                "default": "5",
                "desc": "坐标轴刻度的长度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "lineStyle",
                "type": "Object",
                "desc": "刻度线的样式设置。",
                "children": [
                    {
                        "name": "color",
                        "type": "color",
                        "default": "\"#000\"",
                        "desc": "坐标轴刻度线的颜色。\n\n\n\n\n\n> 支持使用`rgb(255,255,255)`，`rgba(255,255,255,1)`，`#fff`等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[option.color](https://echarts.apache.org/zh/option.html#color)",
                        "children": []
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "default": "1",
                        "desc": "坐标轴刻度线宽。",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "type",
                        "type": "enum",
                        "desc": "线的类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`dashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntype: [5, 10],\n\ndashOffset: 5\n}\n```",
                        "children": [],
                        "options": "'solid','dashed','dotted'"
                    },
                    {
                        "name": "dashOffset",
                        "type": "number",
                        "default": "0",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`type`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "cap",
                        "type": "enum",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于指定线段末端的绘制方式，可以是：\n+ `'butt'`: 线段末端以方形结束。\n+ `'round'`: 线段末端以圆形结束。\n+ `'square'`: 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 `'butt'`。 更多详情可以参考 MDN [lineCap](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap)。",
                        "children": [],
                        "options": "'butt','round','square'"
                    },
                    {
                        "name": "join",
                        "type": "enum",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。\n\n可以是：\n+ `'bevel'`: 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n+ `'round'`: 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n+ `'miter'`: 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过\n`miterLimit`\n属性看到效果。\n\n默认值为 `'bevel'`。 更多详情可以参考 MDN [lineJoin](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin)。",
                        "children": [],
                        "options": "'bevel','round','miter'"
                    },
                    {
                        "name": "miterLimit",
                        "type": "number",
                        "default": "10",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置斜接面限制比例。只有当\n`join`\n为 `miter` 时，\n`miterLimit`\n才有效。\n\n默认值为 `10`。负数、`0`、`Infinity` 和 `NaN` 均会被忽略。\n\n更多详情可以参考 MDN [miterLimit](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit)。",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "shadowBlur",
                        "type": "number",
                        "default": "",
                        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```ts\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "shadowColor",
                        "type": "color",
                        "default": "",
                        "desc": "阴影颜色。支持的格式同`color`。",
                        "children": []
                    },
                    {
                        "name": "shadowOffsetX",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影水平方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "shadowOffsetY",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影垂直方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "opacity",
                        "type": "number",
                        "default": "1",
                        "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。\n\n\n\n\n\n\n\n\n\n\n\n<!-- Overwrite color -->",
                        "children": [],
                        "min": "0",
                        "max": "1",
                        "step": "0.01"
                    },
                    {
                        "name": "color",
                        "type": "Color",
                        "desc": "刻度线的颜色，默认取 [axisTick.lineStyle.color](https://echarts.apache.org/zh/option.html#.axisTick.lineStyle.color)。",
                        "children": []
                    }
                ]
            },
            {
                "name": "customValues",
                "type": "Array",
                "desc": "> 从 `v5.5.1` 开始支持\n\n\n\n自定义要显示的坐标轴刻度位置。例如：\n\n```ts\naxisTick: {\nalignWithLabel: true,\ncustomValues: [0, 0.5, 1, 1.5, 2, 8, 9]\n}\n```\n\n![600xauto](https://echarts.apache.org/zh/option.html#axis-tick-label-custom-values.png)",
                "children": []
            }
        ]
    },
    {
        "name": "axisLabel",
        "type": "Object",
        "desc": "坐标轴刻度标签的相关设置。",
        "children": [
            {
                "name": "show",
                "type": "boolean",
                "default": "true",
                "desc": "是否显示刻度标签。",
                "children": []
            },
            {
                "name": "rotate",
                "type": "angle",
                "default": "0",
                "desc": "刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。\n\n旋转的角度从 -90 度到 90 度。",
                "children": [],
                "min": "-90",
                "max": "90",
                "step": "1"
            },
            {
                "name": "margin",
                "type": "number",
                "default": "8",
                "desc": "刻度标签与轴线之间的距离。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "formatter",
                "type": [
                    "string",
                    "Function"
                ],
                "desc": "刻度标签的内容格式器，支持字符串模板和回调函数两种形式。\n\n示例:\n```ts\n// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: '{value} kg'\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\nreturn value + 'kg';\n}\n```\n\n---\n\n对于时间轴（[type](https://echarts.apache.org/zh/option.html#.type): `'time'`），`formatter` 的字符串模板支持多种形式：\n\n- **字符串模板**：简单快速实现常用日期时间模板，`string` 类型\n- **回调函数**：自定义 formatter，可以用来实现复杂高级的格式，`Function` 类型\n- **分级模板**：为不同时间粒度的标签使用不同的 formatter，`object` 类型\n\n下面我们分别介绍这三种形式。\n\n** 字符串模板 **\n\n使用字符串模板是一种方便实现常用日期时间格式化方式的形式。如果字符串模板可以实现你的效果，那我们优先推荐使用此方式；如果无法实现，再考虑其他两种更复杂的方式。支持的模板如下：\n\n| 分类        | 模板 | 取值（英文）                                                    | 取值（中文）                                                                |\n|--------------|----------|----------------------------------------------------------------|----------------------------------------------------------------------------|\n| Year         | {yyyy}     | e.g., 2020, 2021, ...                                          | 例：2020, 2021, ...                                                        |\n|              | {yy}       | 00-99                                                          | 00-99                                                                      |\n| Quarter      | {Q}        | 1, 2, 3, 4                                                     | 1, 2, 3, 4                                                                 |\n| Month        | {MMMM}     | e.g., January, February, ...                                   | 一月、二月、…… |\n|              | {MMM}      | e.g., Jan, Feb, ...                                            | 1月、2月、……              |\n|              | {MM}       | 01-12                                                          | 01-12                                                                      |\n|              | {M}        | 1-12                                                           | 1-12                                                                       |\n| Day of Month | {dd}       | 01-31                                                          | 01-31                                                                      |\n|              | {d}        | 1-31                                                           | 1-31                                                                       |\n| Day of Week  | {eeee}     | Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday | 星期日、星期一、星期二、星期三、星期四、星期五、星期六                     |\n|              | {ee}       | Sun, Mon, Tues, Wed, Thu, Fri, Sat                             | 日、一、二、三、四、五、六                                                 |\n|              | {e}        | 1-54                                                           | 1-54                                                                       |\n| Hour         | {HH}       | 00-23                                                          | 00-23                                                                      |\n|              | {H}        | 0-23                                                           | 0-23                                                                       |\n|              | {hh}       | 01-12                                                          | 01-12                                                                      |\n|              | {h}        | 1-12                                                           | 1-12                                                                       |\n| Minute       | {mm}       | 00-59                                                          | 00-59                                                                      |\n|              | {m}        | 0-59                                                           | 0-59                                                                       |\n| Second       | {ss}       | 00-59                                                          | 00-59                                                                      |\n|              | {s}        | 0-59                                                           | 0-59                                                                       |\n| Millisecond  | {SSS}      | 000-999                                                        | 000-999                                                                    |\n|              | {S}        | 0-999                                                          | 0-999                                                                      |\n\n> 其他语言请参考相应[语言包](https://github.com/apache/echarts/tree/master/src/i18n)中的定义，语言包可以通过 [echarts.registerLocale](api.html#echarts.registerLocale) 注册。\n\n示例:\n```ts\nformatter: '{yyyy}-{MM}-{dd}' // 得到的 label 形如：'2020-12-02'\nformatter: '{d}日' // 得到的 label 形如：'2日'\n```\n\n** 回调函数 **\n\n回调函数可以根据刻度值返回不同的格式，如果有复杂的时间格式化需求，也可以引用第三方的日期时间相关的库（如 [Moment.js](https://momentjs.com/)、[date-fns](https://date-fns.org/) 等），返回显示的文本。\n\n示例：\n```ts\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n// 格式化成月/日，只在第一个刻度显示年份\nvar date = new Date(value);\nvar texts = [(date.getMonth() + 1), date.getDate()];\nif (index === 0) {\ntexts.unshift(date.getFullYear());\n}\nreturn texts.join('/');\n}\n```\n\n** 分级模板 **\n\n有时候，我们希望对不同的时间粒度采用不同的格式化策略。例如，在季度图表中，我们可能希望对每个月的第一天显示月份，而其他日期显示日期。我们可以使用以下方式实现该效果：\n\n示例：\n```ts\nformatter: {\nmonth: '{MMMM}', // 一月、二月、……\nday: '{d}日' // 1日、2日、……\n}\n```\n\n支持的分级以及各自默认的取值为：\n```ts\n{\nyear: '{yyyy}',\nmonth: '{MMM}',\nday: '{d}',\nhour: '{HH}:{mm}',\nminute: '{HH}:{mm}',\nsecond: '{HH}:{mm}:{ss}',\nmillisecond: '{hh}:{mm}:{ss} {SSS}',\nnone: '{yyyy}-{MM}-{dd} {hh}:{mm}:{ss} {SSS}'\n}\n```\n\n以 `day` 为例，当一个刻度点的值的小时、分钟、秒、毫秒都为 `0` 时，将采用 `day` 的分级值作为模板。`none` 表示当其他规则都不适用时采用的模板，也就是带有毫秒值的刻度点的模板。\n\n\n** 富文本 **\n\n以上这三种形式的 formatter 都支持富文本，所以可以做成一些复杂的效果。\n\n示例：\n```ts\nxAxis: {\ntype: 'time',\naxisLabel: {\nformatter: {\n// 一年的第一个月显示年度信息和月份信息\nyear: '{yearStyle|{yyyy}}\\n{monthStyle|{MMM}}',\nmonth: '{monthStyle|{MMM}}'\n},\nrich: {\nyearStyle: {\n// 让年度信息更醒目\ncolor: '#000',\nfontWeight: 'bold'\n},\nmonthStyle: {\ncolor: '#999'\n}\n}\n}\n},\n```\n\n使用回调函数形式实现上面例子同样的效果：\n\n示例：\n```ts\nxAxis: {\ntype: 'time',\naxisLabel: {\nformatter: function (value) {\nconst date = new Date(value);\nconst yearStart = new Date(value);\nyearStart.setMonth(0);\nyearStart.setDate(1);\nyearStart.setHours(0);\nyearStart.setMinutes(0);\nyearStart.setSeconds(0);\nyearStart.setMilliseconds(0);\n// 判断一个刻度值知否为一年的开始\nif (date.getTime() === yearStart.getTime()) {\nreturn '{year|' + date.getFullYear() + '}\\n'\n+ '{month|' + (date.getMonth() + 1) + '月}';\n}\nelse {\nreturn '{month|' + (date.getMonth() + 1) + '月}'\n}\n},\nrich: {\nyear: {\ncolor: '#000',\nfontWeight: 'bold'\n},\nmonth: {\ncolor: '#999'\n}\n}\n}\n},\n```",
                "children": []
            },
            {
                "name": "showMinLabel",
                "type": "boolean",
                "desc": "是否显示最小 tick 的 label。可取值 `true`, `false`, `null`。默认自动判定（即如果标签重叠，不会显示最小 tick 的 label）。",
                "children": []
            },
            {
                "name": "showMaxLabel",
                "type": "boolean",
                "desc": "是否显示最大 tick 的 label。可取值 `true`, `false`, `null`。默认自动判定（即如果标签重叠，不会显示最大 tick 的 label）。",
                "children": []
            },
            {
                "name": "hideOverlap",
                "type": "boolean",
                "desc": "> 从 `v5.2.0` 开始支持\n\n\n\n是否隐藏重叠的标签。",
                "children": []
            },
            {
                "name": "customValues",
                "type": "Array",
                "desc": "> 从 `v5.5.1` 开始支持\n\n\n\n自定义要显示的标签位置。例如：\n\n```ts\naxisLabel: {\ncustomValues: [0, 4, 7, 8, 9]\n}\n```\n\n![600xauto](https://echarts.apache.org/zh/option.html#axis-tick-label-custom-values.png)",
                "children": []
            },
            {
                "name": "color",
                "type": "color",
                "default": "'#333'",
                "desc": "文字的颜色。",
                "children": []
            },
            {
                "name": "fontStyle",
                "type": "enum",
                "desc": "文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
                "children": [],
                "options": "'normal','italic','oblique'"
            },
            {
                "name": "fontWeight",
                "type": "enum",
                "desc": "文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
                "children": [],
                "options": "'normal','bold','bolder','lighter'"
            },
            {
                "name": "fontFamily",
                "type": "enum",
                "desc": "文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
                "children": [],
                "options": "'sans-serif','serif','monospace','Arial','Courier New'"
            },
            {
                "name": "fontSize",
                "type": "number",
                "default": "12",
                "desc": "文字的字体大小。",
                "children": [],
                "min": "1",
                "step": "1"
            },
            {
                "name": "align",
                "type": "enum",
                "desc": "文字水平对齐方式，默认自动。\n\n可选：\n+ `'left'`\n+ `'center'`\n+ `'right'`\n\n\n\n`rich` 中如果没有设置 `align`，则会取父层级的 `align`。例如：\n\n```ts\n{\nalign: right,\nrich: {\na: {\n// 没有设置 `align`，则 `align` 为 right\n}\n}\n}\n```",
                "children": [],
                "options": "'left','center','right'"
            },
            {
                "name": "verticalAlign",
                "type": "enum",
                "desc": "文字垂直对齐方式，默认自动。\n\n可选：\n+ `'top'`\n+ `'middle'`\n+ `'bottom'`\n\n\n\n`rich` 中如果没有设置 `verticalAlign`，则会取父层级的 `verticalAlign`。例如：\n\n```ts\n{\nverticalAlign: bottom,\nrich: {\na: {\n// 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n}\n}\n}\n```",
                "children": [],
                "options": "'top','middle','bottom'"
            },
            {
                "name": "lineHeight",
                "type": "number",
                "default": "12",
                "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```ts\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
                "children": [],
                "min": "0",
                "step": "1"
            },
            {
                "name": "backgroundColor",
                "type": "color",
                "default": "'transparent'",
                "desc": "文字块背景色。\n\n可以使用颜色值，例如：`'#123234'`, `'red'`, `'rgba(0,23,11,0.3)'`。\n\n也可以直接使用图片，例如：\n\n```ts\nbackgroundColor: {\nimage: 'xxx/xxx.png'\n// 这里可以是图片的 URL，\n// 或者图片的 dataURI，\n// 或者 HTMLImageElement 对象，\n// 或者 HTMLCanvasElement 对象。\n}\n```\n\n当使用图片的时候，可以使用 `width` 或 `height` 指定高宽，也可以不指定自适应。",
                "children": []
            },
            {
                "name": "borderColor",
                "type": "color",
                "default": "'#fff'",
                "desc": "文字块边框颜色。",
                "children": []
            },
            {
                "name": "borderWidth",
                "type": "number",
                "default": "0",
                "desc": "文字块边框宽度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "borderType",
                "type": "enum",
                "desc": "文字块边框描边类型。\n\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`borderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\nborderType: [5, 10],\n\nborderDashOffset: 5\n}\n```",
                "children": [],
                "options": "'solid','dashed','dotted'"
            },
            {
                "name": "borderDashOffset",
                "type": "number",
                "default": "0",
                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`borderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                "children": [],
                "min": "0",
                "step": "1"
            },
            {
                "name": "borderRadius",
                "type": "vector",
                "default": "0",
                "desc": "文字块的圆角。",
                "children": [],
                "min": "0",
                "dims": "LT,RT, RB, LB"
            },
            {
                "name": "padding",
                "type": "vector",
                "default": "0",
                "desc": "文字块的内边距。例如：\n\n+ `padding: [3, 4, 5, 6]`：表示 `[上, 右, 下, 左]` 的边距。\n+ `padding: 4`：表示 `padding: [4, 4, 4, 4]`。\n+ `padding: [3, 4]`：表示 `padding: [3, 4, 3, 4]`。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。",
                "children": [],
                "min": "0",
                "dims": "T,R,B,L"
            },
            {
                "name": "shadowColor",
                "type": "color",
                "default": "'transparent'",
                "desc": "文字块的背景阴影颜色。",
                "children": []
            },
            {
                "name": "shadowBlur",
                "type": "number",
                "default": "0",
                "desc": "文字块的背景阴影长度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "shadowOffsetX",
                "type": "number",
                "default": "0",
                "desc": "文字块的背景阴影 X 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "shadowOffsetY",
                "type": "number",
                "default": "0",
                "desc": "文字块的背景阴影 Y 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "width",
                "type": [
                    "number",
                    "string"
                ],
                "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                "children": []
            },
            {
                "name": "height",
                "type": [
                    "number",
                    "string"
                ],
                "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                "children": []
            },
            {
                "name": "textBorderColor",
                "type": "color",
                "desc": "文字本身的描边颜色。",
                "children": []
            },
            {
                "name": "textBorderWidth",
                "type": "number",
                "desc": "文字本身的描边宽度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "textBorderType",
                "type": "enum",
                "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
                "children": [],
                "options": "'solid','dashed','dotted'"
            },
            {
                "name": "textBorderDashOffset",
                "type": "number",
                "default": "0",
                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                "children": [],
                "min": "0",
                "step": "1"
            },
            {
                "name": "textShadowColor",
                "type": "color",
                "default": "'transparent'",
                "desc": "文字本身的阴影颜色。",
                "children": []
            },
            {
                "name": "textShadowBlur",
                "type": "number",
                "default": "0",
                "desc": "文字本身的阴影长度。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "textShadowOffsetX",
                "type": "number",
                "default": "0",
                "desc": "文字本身的阴影 X 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "textShadowOffsetY",
                "type": "number",
                "default": "0",
                "desc": "文字本身的阴影 Y 偏移。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "width",
                "type": "number",
                "default": "100",
                "desc": "文本显示宽度。",
                "children": [],
                "min": "1",
                "max": "500",
                "step": "1"
            },
            {
                "name": "height",
                "type": "number",
                "default": "50",
                "desc": "文本显示高度。",
                "children": [],
                "min": "1",
                "max": "500",
                "step": "1"
            },
            {
                "name": "overflow",
                "type": "enum",
                "desc": "文字超出宽度是否截断或者换行。配置`width`时有效\n\n+ `'truncate'` 截断，并在末尾显示`ellipsis`配置的文本，默认为`...`\n+ `'break'` 换行\n+ `'breakAll'` 换行，跟`'break'`不同的是，在英语等拉丁文中，`'breakAll'`还会强制单词内换行",
                "children": [],
                "options": "'truncate','break','breakAll'"
            },
            {
                "name": "ellipsis",
                "type": "string",
                "default": "'...'",
                "desc": "在`overflow`配置为`'truncate'`的时候，可以通过该属性配置末尾显示的文本。",
                "children": []
            },
            {
                "name": "rich",
                "type": "Object",
                "desc": "在 `rich` 里面，可以自定义富文本样式。利用富文本样式，可以在标签中做出非常丰富的效果。\n\n例如：\n\n```ts\nlabel: {\n// 在文本中，可以对部分文本采用 rich 中定义样式。\n// 这里需要在文本中使用标记符号：\n// `{styleName|text content text content}` 标记样式名。\n// 注意，换行仍是使用 '\\n'。\nformatter: [\n'{a|这段文本采用样式a}',\n'{b|这段文本采用样式b}这段用默认样式{x|这段用样式x}'\n].join('\\n'),\n\nrich: {\na: {\ncolor: 'red',\nlineHeight: 10\n},\nb: {\nbackgroundColor: {\nimage: 'xxx/xxx.jpg'\n},\nheight: 40\n},\nx: {\nfontSize: 18,\nfontFamily: 'Microsoft YaHei',\nborderColor: '#449933',\nborderRadius: 4\n},\n...\n}\n}\n```\n\n\n详情参见教程：[富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)",
                "children": [
                    {
                        "name": "<style_name>",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "color",
                                "type": "color",
                                "default": "'#fff'",
                                "desc": "文字的颜色。",
                                "children": []
                            },
                            {
                                "name": "fontStyle",
                                "type": "enum",
                                "desc": "文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`",
                                "children": [],
                                "options": "'normal','italic','oblique'"
                            },
                            {
                                "name": "fontWeight",
                                "type": "enum",
                                "desc": "文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...",
                                "children": [],
                                "options": "'normal','bold','bolder','lighter'"
                            },
                            {
                                "name": "fontFamily",
                                "type": "enum",
                                "desc": "文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...",
                                "children": [],
                                "options": "'sans-serif','serif','monospace','Arial','Courier New'"
                            },
                            {
                                "name": "fontSize",
                                "type": "number",
                                "default": "12",
                                "desc": "文字的字体大小。",
                                "children": [],
                                "min": "1",
                                "step": "1"
                            },
                            {
                                "name": "align",
                                "type": "enum",
                                "desc": "文字水平对齐方式，默认自动。\n\n可选：\n+ `'left'`\n+ `'center'`\n+ `'right'`\n\n\n\n`rich` 中如果没有设置 `align`，则会取父层级的 `align`。例如：\n\n```ts\n{\nalign: right,\nrich: {\na: {\n// 没有设置 `align`，则 `align` 为 right\n}\n}\n}\n```",
                                "children": [],
                                "options": "'left','center','right'"
                            },
                            {
                                "name": "verticalAlign",
                                "type": "enum",
                                "desc": "文字垂直对齐方式，默认自动。\n\n可选：\n+ `'top'`\n+ `'middle'`\n+ `'bottom'`\n\n\n\n`rich` 中如果没有设置 `verticalAlign`，则会取父层级的 `verticalAlign`。例如：\n\n```ts\n{\nverticalAlign: bottom,\nrich: {\na: {\n// 没有设置 `verticalAlign`，则 `verticalAlign` 为 bottom\n}\n}\n}\n```",
                                "children": [],
                                "options": "'top','middle','bottom'"
                            },
                            {
                                "name": "lineHeight",
                                "type": "number",
                                "default": "12",
                                "desc": "行高。\n\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```ts\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "backgroundColor",
                                "type": "color",
                                "default": "'transparent'",
                                "desc": "文字块背景色。\n\n可以使用颜色值，例如：`'#123234'`, `'red'`, `'rgba(0,23,11,0.3)'`。\n\n也可以直接使用图片，例如：\n\n```ts\nbackgroundColor: {\nimage: 'xxx/xxx.png'\n// 这里可以是图片的 URL，\n// 或者图片的 dataURI，\n// 或者 HTMLImageElement 对象，\n// 或者 HTMLCanvasElement 对象。\n}\n```\n\n当使用图片的时候，可以使用 `width` 或 `height` 指定高宽，也可以不指定自适应。",
                                "children": []
                            },
                            {
                                "name": "borderColor",
                                "type": "color",
                                "default": "'#fff'",
                                "desc": "文字块边框颜色。",
                                "children": []
                            },
                            {
                                "name": "borderWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块边框宽度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "borderType",
                                "type": "enum",
                                "desc": "文字块边框描边类型。\n\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`borderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\nborderType: [5, 10],\n\nborderDashOffset: 5\n}\n```",
                                "children": [],
                                "options": "'solid','dashed','dotted'"
                            },
                            {
                                "name": "borderDashOffset",
                                "type": "number",
                                "default": "0",
                                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`borderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "borderRadius",
                                "type": "vector",
                                "default": "0",
                                "desc": "文字块的圆角。",
                                "children": [],
                                "min": "0",
                                "dims": "LT,RT, RB, LB"
                            },
                            {
                                "name": "padding",
                                "type": "vector",
                                "default": "0",
                                "desc": "文字块的内边距。例如：\n\n+ `padding: [3, 4, 5, 6]`：表示 `[上, 右, 下, 左]` 的边距。\n+ `padding: 4`：表示 `padding: [4, 4, 4, 4]`。\n+ `padding: [3, 4]`：表示 `padding: [3, 4, 3, 4]`。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。",
                                "children": [],
                                "min": "0",
                                "dims": "T,R,B,L"
                            },
                            {
                                "name": "shadowColor",
                                "type": "color",
                                "default": "'transparent'",
                                "desc": "文字块的背景阴影颜色。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块的背景阴影长度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块的背景阴影 X 偏移。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "0",
                                "desc": "文字块的背景阴影 Y 偏移。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "width",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                                "children": []
                            },
                            {
                                "name": "height",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                                "children": []
                            },
                            {
                                "name": "textBorderColor",
                                "type": "color",
                                "desc": "文字本身的描边颜色。",
                                "children": []
                            },
                            {
                                "name": "textBorderWidth",
                                "type": "number",
                                "desc": "文字本身的描边宽度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "textBorderType",
                                "type": "enum",
                                "desc": "文字本身的描边类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`textBorderDashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntextBorderType: [5, 10],\n\ntextBorderDashOffset: 5\n}\n```",
                                "children": [],
                                "options": "'solid','dashed','dotted'"
                            },
                            {
                                "name": "textBorderDashOffset",
                                "type": "number",
                                "default": "0",
                                "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`textBorderType`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "textShadowColor",
                                "type": "color",
                                "default": "'transparent'",
                                "desc": "文字本身的阴影颜色。",
                                "children": []
                            },
                            {
                                "name": "textShadowBlur",
                                "type": "number",
                                "default": "0",
                                "desc": "文字本身的阴影长度。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "textShadowOffsetX",
                                "type": "number",
                                "default": "0",
                                "desc": "文字本身的阴影 X 偏移。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "textShadowOffsetY",
                                "type": "number",
                                "default": "0",
                                "desc": "文字本身的阴影 Y 偏移。\n\n\n\n\n\n\n\n\n\n\n<!-- Overwrite color -->",
                                "children": [],
                                "step": "0.5"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "color",
                "type": "color",
                "desc": "刻度标签文字的颜色，默认取 [axisLine.lineStyle.color](https://echarts.apache.org/zh/option.html#.axisLine.lineStyle.color)。支持回调函数，格式如下\n\n```ts\n(val: string) => Color\n```\n\n参数是标签的文本，返回颜色值，如下示例：\n\n```ts\ntextStyle: {\ncolor: function (value, index) {\nreturn value >= 0 ? 'green' : 'red';\n}\n}\n```",
                "children": []
            }
        ]
    },
    {
        "name": "splitLine",
        "type": "Object",
        "desc": "坐标轴在 [grid](https://echarts.apache.org/zh/option.html#grid) 区域中的分隔线。",
        "children": [
            {
                "name": "show",
                "type": "boolean",
                "default": "true",
                "desc": "是否显示分隔线。默认数值轴显示，类目轴不显示。",
                "children": []
            },
            {
                "name": "lineStyle",
                "type": "Object",
                "desc": "",
                "children": [
                    {
                        "name": "color",
                        "type": "color",
                        "default": "'#333'",
                        "desc": "分隔线线的颜色。\n\n\n\n\n\n> 支持使用`rgb(255,255,255)`，`rgba(255,255,255,1)`，`#fff`等方式设置为纯色，也支持设置为渐变色和纹理填充，具体见[option.color](https://echarts.apache.org/zh/option.html#color)",
                        "children": []
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "default": "1",
                        "desc": "分隔线线宽。",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "type",
                        "type": "enum",
                        "desc": "线的类型。\n\n\n可选：\n+ `'solid'`\n+ `'dashed'`\n+ `'dotted'`\n\n自 `v5.0.0` 开始，也可以是 `number` 或者 `number` 数组，用以指定线条的 [dash array](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray)，配合\n`dashOffset`\n可实现更灵活的虚线效果。\n\n例如：\n```ts\n{\n\ntype: [5, 10],\n\ndashOffset: 5\n}\n```",
                        "children": [],
                        "options": "'solid','dashed','dotted'"
                    },
                    {
                        "name": "dashOffset",
                        "type": "number",
                        "default": "0",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置虚线的偏移量，可搭配\n`type`\n指定 dash array 实现灵活的虚线效果。\n\n更多详情可以参考 MDN [lineDashOffset](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)。",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "cap",
                        "type": "enum",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于指定线段末端的绘制方式，可以是：\n+ `'butt'`: 线段末端以方形结束。\n+ `'round'`: 线段末端以圆形结束。\n+ `'square'`: 线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域。\n\n默认值为 `'butt'`。 更多详情可以参考 MDN [lineCap](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineCap)。",
                        "children": [],
                        "options": "'butt','round','square'"
                    },
                    {
                        "name": "join",
                        "type": "enum",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）。\n\n可以是：\n+ `'bevel'`: 在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角。\n+ `'round'`: 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。\n+ `'miter'`: 通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过\n`miterLimit`\n属性看到效果。\n\n默认值为 `'bevel'`。 更多详情可以参考 MDN [lineJoin](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineJoin)。",
                        "children": [],
                        "options": "'bevel','round','miter'"
                    },
                    {
                        "name": "miterLimit",
                        "type": "number",
                        "default": "10",
                        "desc": "> 从 `v5.0.0` 开始支持\n\n\n\n\n\n用于设置斜接面限制比例。只有当\n`join`\n为 `miter` 时，\n`miterLimit`\n才有效。\n\n默认值为 `10`。负数、`0`、`Infinity` 和 `NaN` 均会被忽略。\n\n更多详情可以参考 MDN [miterLimit](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/miterLimit)。",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "shadowBlur",
                        "type": "number",
                        "default": "",
                        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```ts\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "shadowColor",
                        "type": "color",
                        "default": "",
                        "desc": "阴影颜色。支持的格式同`color`。",
                        "children": []
                    },
                    {
                        "name": "shadowOffsetX",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影水平方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "shadowOffsetY",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影垂直方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "opacity",
                        "type": "number",
                        "default": "1",
                        "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。\n\n\n\n\n\n\n\n\n\n\n\n<!-- overwrite color -->",
                        "children": [],
                        "min": "0",
                        "max": "1",
                        "step": "0.01"
                    },
                    {
                        "name": "color",
                        "type": "color",
                        "default": "['#ccc']",
                        "desc": "分隔线颜色，可以设置成单个颜色。\n\n也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色。\n\n示例\n```\nsplitLine: {\nlineStyle: {\n// 使用深浅的间隔色\ncolor: ['#aaa', '#ddd']\n}\n}\n```",
                        "children": []
                    }
                ]
            }
        ]
    },
    {
        "name": "splitArea",
        "type": "Object",
        "desc": "坐标轴在 [grid](https://echarts.apache.org/zh/option.html#grid) 区域中的分隔区域，默认不显示。",
        "children": [
            {
                "name": "show",
                "type": "boolean",
                "default": "true",
                "desc": "是否显示分隔区域。",
                "children": []
            },
            {
                "name": "areaStyle",
                "type": "Object",
                "desc": "分隔区域的样式设置。",
                "children": [
                    {
                        "name": "color",
                        "type": "Array",
                        "default": "['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']",
                        "desc": "分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。",
                        "children": []
                    },
                    {
                        "name": "shadowBlur",
                        "type": "number",
                        "default": "",
                        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```ts\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "shadowColor",
                        "type": "color",
                        "default": "",
                        "desc": "阴影颜色。支持的格式同`color`。",
                        "children": []
                    },
                    {
                        "name": "shadowOffsetX",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影水平方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "shadowOffsetY",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影垂直方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "opacity",
                        "type": "number",
                        "default": "1",
                        "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。",
                        "children": [],
                        "min": "0",
                        "max": "1",
                        "step": "0.01"
                    }
                ]
            }
        ]
    },
    {
        "name": "indicator",
        "type": "Array",
        "desc": "雷达图的指示器，用来指定雷达图中的多个变量（维度），如下示例。\n\n```ts\nindicator: [\n{ name: '销售（sales）', max: 6500},\n{ name: '管理（Administration）', max: 16000, color: 'red'}, // 标签设置为红色\n{ name: '信息技术（Information Techology）', max: 30000},\n{ name: '客服（Customer Support）', max: 38000},\n{ name: '研发（Development）', max: 52000},\n{ name: '市场（Marketing）', max: 25000}\n]\n```",
        "children": [
            {
                "name": "name",
                "type": "string",
                "desc": "指示器名称。",
                "children": []
            },
            {
                "name": "max",
                "type": "number",
                "default": "100",
                "desc": "指示器的最大值，可选，建议设置",
                "children": [],
                "step": "1"
            },
            {
                "name": "min",
                "type": "number",
                "desc": "指示器的最小值，可选，默认为 0。",
                "children": [],
                "step": "1"
            },
            {
                "name": "color",
                "type": "color",
                "desc": "标签特定的颜色。",
                "children": []
            }
        ]
    }
]