[
    {
        "name": "type",
        "type": "string",
        "default": "'custom'",
        "desc": "",
        "children": []
    },
    {
        "name": "id",
        "type": "string",
        "desc": "组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件。",
        "children": []
    },
    {
        "name": "name",
        "type": "string",
        "desc": "系列名称，用于[tooltip](https://echarts.apache.org/zh/option.html#tooltip)的显示，[legend](https://echarts.apache.org/zh/option.html#legend) 的图例筛选，在 `setOption` 更新数据和配置项时用于指定对应的系列。",
        "children": []
    },
    {
        "name": "legendHoverLink",
        "type": "boolean",
        "default": "true",
        "desc": "是否启用[图例](https://echarts.apache.org/zh/option.html#legend) hover 时的联动高亮。",
        "children": []
    },
    {
        "name": "coordinateSystem",
        "type": "string",
        "default": "'cartesian2d'",
        "desc": "该系列使用的坐标系，可选：\n\n\n+ `null` 或者 `'none'`\n\n无坐标系。\n\n\n\n\n+ `'cartesian2d'`\n\n使用二维的直角坐标系（也称笛卡尔坐标系），通过 [xAxisIndex](https://echarts.apache.org/zh/option.html#series-custom.xAxisIndex), [yAxisIndex](https://echarts.apache.org/zh/option.html#series-custom.yAxisIndex)指定相应的坐标轴组件。\n\n\n\n\n+ `'polar'`\n\n使用极坐标系，通过 [polarIndex](https://echarts.apache.org/zh/option.html#series-custom.polarIndex) 指定相应的极坐标组件\n\n\n\n\n+ `'geo'`\n\n使用地理坐标系，通过 [geoIndex](https://echarts.apache.org/zh/option.html#series-custom.geoIndex) 指定相应的地理坐标系组件。\n\n\n\n\n\n\n+ `'none'`\n\n不使用坐标系。",
        "children": []
    },
    {
        "name": "xAxisIndex",
        "type": "number",
        "default": "0",
        "desc": "使用的 [x 轴](https://echarts.apache.org/zh/option.html#xAxis)的 index，在单个图表实例中存在多个 x 轴的时候有用。",
        "children": []
    },
    {
        "name": "yAxisIndex",
        "type": "number",
        "default": "0",
        "desc": "使用的 [y 轴](https://echarts.apache.org/zh/option.html#yAxis)的 index，在单个图表实例中存在多个 y轴的时候有用。",
        "children": []
    },
    {
        "name": "polarIndex",
        "type": "number",
        "default": "0",
        "desc": "使用的[极坐标系](https://echarts.apache.org/zh/option.html#polar)的 index，在单个图表实例中存在多个极坐标系的时候有用。",
        "children": []
    },
    {
        "name": "geoIndex",
        "type": "number",
        "default": "0",
        "desc": "使用的[地理坐标系](https://echarts.apache.org/zh/option.html#geo)的 index，在单个图表实例中存在多个地理坐标系的时候有用。",
        "children": []
    },
    {
        "name": "calendarIndex",
        "type": "number",
        "default": "0",
        "desc": "使用的[日历坐标系](https://echarts.apache.org/zh/option.html#calendar)的 index，在单个图表实例中存在多个日历坐标系的时候有用。",
        "children": []
    },
    {
        "name": "renderItem",
        "type": "Function",
        "desc": "custom 系列需要开发者自己提供图形渲染的逻辑。这个渲染逻辑一般命名为 [renderItem](https://echarts.apache.org/zh/option.html#series-custom.renderItem)。例如：\n\n```js\nvar option = {\n...,\nseries: [{\ntype: 'custom',\nrenderItem: function (params, api) {\nvar categoryIndex = api.value(0);\nvar start = api.coord([api.value(1), categoryIndex]);\nvar end = api.coord([api.value(2), categoryIndex]);\nvar height = api.size([0, 1])[1] * 0.6;\n\nvar rectShape = echarts.graphic.clipRectByRect({\nx: start[0],\ny: start[1] - height / 2,\nwidth: end[0] - start[0],\nheight: height\n}, {\nx: params.coordSys.x,\ny: params.coordSys.y,\nwidth: params.coordSys.width,\nheight: params.coordSys.height\n});\n\nreturn rectShape && {\ntype: 'rect',\nshape: rectShape,\nstyle: api.style()\n};\n},\ndata: data\n}]\n}\n```\n\n对于 `data` 中的每个数据项（为方便描述，这里称为 `dataItem`)，会调用此 [renderItem](https://echarts.apache.org/zh/option.html#series-custom.renderItem) 函数。\n\n[renderItem](https://echarts.apache.org/zh/option.html#series-custom.renderItem) 函数提供了两个参数：\n+ [params](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.params)：包含了当前数据信息和坐标系的信息。\n+ [api](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api)：是一些开发者可调用的方法集合。\n\n[renderItem](https://echarts.apache.org/zh/option.html#series-custom.renderItem) 函数须返回根据此 `dataItem` 绘制出的图形元素的定义信息，参见 [renderItem.return](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return)。\n\n一般来说，[renderItem](https://echarts.apache.org/zh/option.html#series-custom.renderItem) 函数的主要逻辑，是将 `dataItem` 里的值映射到坐标系上的图形元素。这一般需要用到 [renderItem.arguments.api](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api) 中的两个函数：\n+ [api.value(...)](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api.value)，意思是取出 `dataItem` 中的数值。例如 `api.value(0)` 表示取出当前 `dataItem` 中第一个维度的数值。\n+ [api.coord(...)](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api.coord)，意思是进行坐标转换计算。例如 `var point = api.coord([api.value(0), api.value(1)])` 表示 `dataItem` 中的数值转换成坐标系上的点。\n\n有时候还需要用到 [api.size(...)](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api.size) 函数，表示得到坐标系上一段数值范围对应的长度。\n\n返回值中样式的设置可以使用 [api.style(...)](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api.style) 函数，他能得到 [series.itemStyle](https://echarts.apache.org/zh/option.html#series-custom.itemStyle) 中定义的样式信息，以及视觉映射的样式信息。也可以用这种方式覆盖这些样式信息：`api.style({fill: 'green', stroke: 'yellow'})`。\n\n\n\n\n\n\n\n\n\n\n### arguments\n\nrenderItem 函数的参数。",
        "children": [
            {
                "name": "params",
                "type": "Object",
                "desc": "renderItem 函数的第一个参数，含有：\n\n```js\n{\ncontext: // {Object} 一个可供开发者暂存东西的对象。生命周期只为：当前次的渲染。\nseriesId: // {string} 本系列 id。\nseriesName: // {string} 本系列 name。\nseriesIndex: // {number} 本系列 index。\ndataIndex: // {number} 数据项的 index。\ndataIndexInside: // {number} 数据项在当前坐标系中可见的数据的 index（即 dataZoom 当前窗口中的数据的 index）。\ndataInsideLength: // {number} 当前坐标系中可见的数据长度（即 dataZoom 当前窗口中的数据数量）。\nactionType: // {string} 触发此次重绘的 action 的 type。\ncoordSys: // 不同的坐标系中，coordSys 里的信息不一样，含有如下这些可能：\ncoordSys: {\ntype: 'cartesian2d',\nx: // {number} grid rect 的 x\ny: // {number} grid rect 的 y\nwidth: // {number} grid rect 的 width\nheight: // {number} grid rect 的 height\n},\ncoordSys: {\ntype: 'calendar',\nx: // {number} calendar rect 的 x\ny: // {number} calendar rect 的 y\nwidth: // {number} calendar rect 的 width\nheight: // {number} calendar rect 的 height\ncellWidth: // {number} calendar cellWidth\ncellHeight: // {number} calendar cellHeight\nrangeInfo: {\nstart: // calendar 日期开端\nend: // calendar 日期结尾\nweeks: // calendar 周数\ndayCount: // calendar 日数\n}\n},\ncoordSys: {\ntype: 'geo',\nx: // {number} geo rect 的 x\ny: // {number} geo rect 的 y\nwidth: // {number} geo rect 的 width\nheight: // {number} geo rect 的 height\nzoom: // {number} 缩放的比率。如果没有缩放，则值为 1。例如 0.5 表示缩小了一半。\n},\ncoordSys: {\ntype: 'polar',\ncx: // {number} polar 的中心坐标\ncy: // {number} polar 的中心坐标\nr: // {number} polar 的外半径\nr0: // {number} polar 的内半径\n},\ncoordSys: {\ntype: 'singleAxis',\nx: // {number} singleAxis rect 的 x\ny: // {number} singleAxis rect 的 y\nwidth: // {number} singleAxis rect 的 width\nheight: // {number} singleAxis rect 的 height\n}\n}\n```\n\n其中，关于 `dataIndex` 和 `dataIndexInside` 的区别：\n\n+ `dataIndex` 指的 `dataItem` 在原始数据中的 index。\n+ `dataIndexInside` 指的是 `dataItem` 在当前数据窗口（参见 [dataZoom](https://echarts.apache.org/zh/option.html#dataZoom)）中的 index。\n\n[renderItem.arguments.api](https://echarts.apache.org/zh/option.html#series-custom.renderItem.arguments.api) 中使用的参数都是 `dataIndexInside` 而非 `dataIndex`，因为从 `dataIndex` 转换成 `dataIndexInside` 需要时间开销。",
                "children": []
            },
            {
                "name": "api",
                "type": "Object",
                "desc": "renderItem 函数的第二个参数。",
                "children": [
                    {
                        "name": "value",
                        "type": "Function",
                        "desc": "得到给定维度的数据值。\n\n```\n@param {number} dimension 指定的维度（维度从 0 开始计数）。\n@param {number} [dataIndexInside] 一般不用传，默认就是当前数据项的 dataIndexInside。\n@return {number} 给定维度上的值。\n```",
                        "children": []
                    },
                    {
                        "name": "coord",
                        "type": "Function",
                        "desc": "将数据值映射到坐标系上。\n\n```\n@param {Array.<number>} data 数据值。\n@return {Array.<number>} 画布上的点的坐标，至少包含：[x, y]\n对于polar坐标系，还会包含其他信息：\npolar: [x, y, radius, angle]\n```",
                        "children": []
                    },
                    {
                        "name": "size",
                        "type": "Function",
                        "desc": "给定数据范围，映射到坐标系上后的长度。\n\n例如，cartesian2d中，`api.size([2, 4])` 返回 `[12.4, 55]`，表示 x 轴数据范围为 2 映射得到长度是 `12.4`，y 轴数据范围为 4 时应设得到长度为 `55`。\n\n在一些坐标系中，如极坐标系（polar）或者有 log 数轴的坐标系，不同点的长度是不同的，所以需要第二个参数，指定获取长度的点。\n\n```\n@param {Array.<number>} dataSize 数据范围。\n@param {Array.<number>} dataItem 获取长度的点。\n@return {Array.<number>} 画布上的长度\n```",
                        "children": []
                    },
                    {
                        "name": "style",
                        "type": "Function",
                        "desc": "能得到 [series.itemStyle](https://echarts.apache.org/zh/option.html#series-custom.itemStyle) 中定义的样式信息和视觉映射得到的样式信息，可直接用于绘制图元。也可以用这种方式覆盖这些样式信息：`api.style({fill: 'green', stroke: 'yellow'})`。\n\n```\n@param {Object} [extra] 额外指定的样式信息。\n@param {number} [dataIndexInside] 一般不用传，默认就是当前数据项的 dataIndexInside。\n@return {Object} 直接用于绘制图元的样式信息。\n```",
                        "children": []
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Function",
                        "desc": "能得到 [series.itemStyle.emphasis](https://echarts.apache.org/zh/option.html#series-custom.itemStyle.emphasis) 中定义的样式信息和视觉映射的样式信息，可直接用于绘制图元。也可以用这种方式覆盖这些样式信息：`api.style({fill: 'green', stroke: 'yellow'})`。\n\n```\n@param {Object} [extra] 额外指定的样式信息。\n@param {number} [dataIndexInside] 一般不用传，默认就是当前数据项的 dataIndexInside。\n@return {Object} 直接用于绘制图元的样式信息。\n```",
                        "children": []
                    },
                    {
                        "name": "visual",
                        "type": "Function",
                        "desc": "得到视觉映射的样式信息。比较少被使用。\n\n```\n@param {string} visualType 'color', 'symbol', 'symbolSize', ...\n@param {number} [dataIndexInside] 一般不用传，默认就是当前数据项的 dataIndexInside。\n@return {string|number} 视觉映射的样式值。\n```",
                        "children": []
                    },
                    {
                        "name": "barLayout",
                        "type": "Function",
                        "desc": "当需要采用 barLayout 的时候，比如向柱状图上附加些东西，可以用这个方法得到 layout 信息。\n参见 [例子](custom-bar-trend)。\n\n```\n@param {Object} opt\n@param {number} opt.count 每个簇有多少个 bar。\n@param {number|string} [opt.barWidth] bar 宽度。\n可以是绝对值例如 `40` 或者百分数例如 `'60%'`。\n百分数基于自动计算出的每一类目的宽度。\n@param {number|string} [opt.barMaxWidth] bar 最大宽度。\n可以是绝对值例如 `40` 或者百分数例如 `'60%'`。\n百分数基于自动计算出的每一类目的宽度。\n比 `opt.barWidth` 优先级高。\n@param {number|string} [opt.barMinWidth] bar 最小宽度。\n可以是绝对值例如 `40` 或者百分数例如 `'60%'`。\n百分数基于自动计算出的每一类目的宽度。\n比 `opt.barWidth` 优先级高。\n@param {number} [opt.barGap] 每个簇的 bar 之间的宽度。\n@param {number} [opt.barCategoryGap] 不同簇间的宽度。\n@return {Array.<Object>} [{\nwidth: number bar 的宽度。\noffset: number bar 的偏移量，以bar最左为基准。\noffsetCenter: number bar 的偏移量，以bar中心为基准。\n}, ...]\n```",
                        "children": []
                    },
                    {
                        "name": "currentSeriesIndices",
                        "type": "Function",
                        "desc": "得到系列的 当前index。注意这个 index 不同于系列定义时的 index。这个 index 是当 legend 组件进行了系列筛选后，剩余的系列排列后的 index。\n\n```\n@return {number}\n```",
                        "children": []
                    },
                    {
                        "name": "font",
                        "type": "Function",
                        "desc": "得到可以直接进行样式设置的文字信息字符串。\n\n```\n@param {Object} opt\n@param {string} [opt.fontStyle]\n@param {number} [opt.fontWeight]\n@param {number} [opt.fontSize]\n@param {string} [opt.fontFamily]\n@return {string} font 字符串。\n```",
                        "children": []
                    },
                    {
                        "name": "getWidth",
                        "type": "Function",
                        "desc": "```\n@return {number} echarts 容器的宽度。\n```",
                        "children": []
                    },
                    {
                        "name": "getHeight",
                        "type": "Function",
                        "desc": "```\n@return {number} echarts 容器的高度。\n```",
                        "children": []
                    },
                    {
                        "name": "getZr",
                        "type": "Function",
                        "desc": "```\n@return {module:zrender} zrender 实例。\n```",
                        "children": []
                    },
                    {
                        "name": "getDevicePixelRatio",
                        "type": "Function",
                        "desc": "```\n@return {number} 得到当前 devicePixelRatio。\n```",
                        "children": []
                    }
                ]
            },
            {
                "name": "return",
                "type": "Object",
                "desc": "图形元素。每个图形元素是一个 object。详细信息参见：[graphic](https://echarts.apache.org/zh/option.html#graphic.elements)。（width\\height\\top\\bottom 不支持）\n\n如果什么都不渲染，可以不返回任何东西。\n\n例如：\n```js\n// 单独一个矩形\n{\ntype: 'rect',\nshape: {\nx: x, y: y, width: width, height: height\n},\nstyle: api.style()\n}\n```\n\n```js\n// 一组图形元素\n{\ntype: 'group',\n// 如果 diffChildrenByName 设为 true，则会使用 child.name 进行 diff，\n// 从而能有更好的过度动画，但是降低性能。缺省为 false。\n// diffChildrenByName: true,\nchildren: [{\ntype: 'circle',\nshape: {\ncx: cx, cy: cy, r: r\n},\nstyle: api.style()\n}, {\ntype: 'line',\nshape: {\nx1: x1, y1: y1, x2: x2, y2: y2\n},\nstyle: api.style()\n}]\n}\n```",
                "children": []
            },
            {
                "name": "return_group",
                "type": "Object",
                "desc": "group 是唯一的可以有子节点的容器。group 可以用来整体定位一组图形元素。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "group",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "default": "0",
                        "desc": "用于描述此 `group` 的宽。\n\n这个宽只用于给子节点定位。\n\n即便当宽度为零的时候，子节点也可以使用 `left: 'center'` 相对于父节点水平居中。",
                        "children": []
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "default": "0",
                        "desc": "用于描述此 `group` 的高。\n\n这个高只用于给子节点定位。\n\n即便当高度为零的时候，子节点也可以使用 `top: 'middle'` 相对于父节点垂直居中。",
                        "children": []
                    },
                    {
                        "name": "diffChildrenByName",
                        "type": "boolean",
                        "default": "false",
                        "desc": "在 [自定义系列](https://echarts.apache.org/zh/option.html#series-custom) 中，当 `diffChildrenByName: true` 时，对于 [renderItem](https://echarts.apache.org/zh/option.html#series-custom.renderItem) 返回值中的每一个 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group)，会根据其 [children](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group.children) 中每个图形元素的 [name](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.name) 属性进行 \"diff\"。在这里，\"diff\" 的意思是，重绘的时候，在已存在的图形元素和新的图形元素之间建立对应关系（依据 `name` 是否相同），从如果数据有更新，能够形成的过渡动画。\n\n但是注意，这会有性能开销。如果数据量较大，不要开启这个功能。",
                        "children": []
                    },
                    {
                        "name": "children",
                        "type": "Array",
                        "desc": "子节点列表，其中项都是一个图形元素定义。",
                        "children": []
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "default": "group",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_path",
                "type": "Object",
                "desc": "可使用 [SVG PathData](http://www.w3.org/TR/SVG/paths.html#PathData) 做路径。\n可以用来画图标，或者其他各种图形，因为可以很便捷得缩放以适应给定尺寸。\n\n参见例子：\n[icons](custom-calendar-icon) 和 [shapes](custom-gantt-flight)。\n\n关于制定尺寸、拉伸还是平铺，参见 [layout](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.layout)。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "path",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "pathData",
                                "type": "string",
                                "desc": "即 [SVG PathData](http://www.w3.org/TR/SVG/paths.html#PathData)。\n\n例如：`'M0,0 L0,-20 L30,-20 C42,-20 38,-1 50,-1 L70,-1 L70,0 Z'`。\n\n如果指定了 [width](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.width)、[height](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.height)、[x](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.x)、[y](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.y)，则会根据他们定义的矩形，缩放 PathData。如果没有指定这些，就不会缩放。\n\n可使用 [layout](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.layout) 指定缩放策略。\n\n参见例子：\n[icons](custom-calendar-icon) 和 [shapes](custom-gantt-flight)。",
                                "children": []
                            },
                            {
                                "name": "d",
                                "type": "string",
                                "desc": "同 [pathData](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.pathData)，别名。",
                                "children": []
                            },
                            {
                                "name": "layout",
                                "type": "string",
                                "default": "'center'",
                                "desc": "如果指定了 [width](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.width)、[height](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.height)、[x](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.x)、[y](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_path.shape.y)，则会根据他们定义的矩形，缩放 PathData。\n\n`layout` 用于指定缩放策略。\n\n可选值：\n+ `'center'`：保持原来的 PathData 的长宽比，居于矩形中，尽可能撑大但不会超出矩形。\n+ `'cover'`：PathData 拉伸为矩形的长宽比，完全填满矩形，不会超出矩形。",
                                "children": []
                            },
                            {
                                "name": "x",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "y",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "width",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的宽度。",
                                "children": []
                            },
                            {
                                "name": "height",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的高度。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_image",
                "type": "Object",
                "desc": "",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "image",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "image",
                                "type": "string",
                                "desc": "图片的内容，可以是图片的 URL，也可以是 [dataURI](https://tools.ietf.org/html/rfc2397).",
                                "children": []
                            },
                            {
                                "name": "x",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "y",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "width",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的宽度。",
                                "children": []
                            },
                            {
                                "name": "height",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的高度。\n\n\n\n\n\n注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                                "children": []
                            },
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_text",
                "type": "Object",
                "desc": "文本块。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "text",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "text",
                                "type": "string",
                                "default": "''",
                                "desc": "文本块文字。可以使用 `\\n` 来换行。",
                                "children": []
                            },
                            {
                                "name": "x",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "y",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "font",
                                "type": "string",
                                "desc": "字体大小、字体类型、粗细、字体样式。格式参见 [css font](https://developer.mozilla.org/en-US/docs/Web/CSS/font)。\n\n例如：\n```\n// size | family\nfont: '2em \"STHeiti\", sans-serif'\n\n// style | weight | size | family\nfont: 'italic bolder 16px cursive'\n\n// weight | size | family\nfont: 'bolder 2em \"Microsoft YaHei\", sans-serif'\n```",
                                "children": []
                            },
                            {
                                "name": "textAlign",
                                "type": "string",
                                "default": "'left'",
                                "desc": "水平对齐方式，取值：`'left'`, `'center'`, `'right'`。\n\n如果为 `'left'`，表示文本最左端在 `x` 值上。如果为 `'right'`，表示文本最右端在 `x` 值上。",
                                "children": []
                            },
                            {
                                "name": "textVerticalAlign",
                                "type": "string",
                                "desc": "垂直对齐方式，取值：`'top'`, `'middle'`, `'bottom'`。\n\n\n\n注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                                "children": []
                            },
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_rect",
                "type": "Object",
                "desc": "矩形。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "rect",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "x",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "y",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的左上角在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "width",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的宽度。",
                                "children": []
                            },
                            {
                                "name": "height",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的高度。",
                                "children": []
                            },
                            {
                                "name": "r",
                                "type": "Array",
                                "desc": "可以用于设置圆角矩形。`r: [r1, r2, r3, r4]`，\n左上、右上、右下、左下角的半径依次为r1、r2、r3、r4。\n\n可以缩写，例如：\n+ `r` 缩写为 `1`         相当于 `[1, 1, 1, 1]`\n+ `r` 缩写为 `[1]`       相当于 `[1, 1, 1, 1]`\n+ `r` 缩写为 `[1, 2]`    相当于 `[1, 2, 1, 2]`\n+ `r` 缩写为 `[1, 2, 3]1 相当于 `[1, 2, 3, 2]`",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_circle",
                "type": "Object",
                "desc": "圆。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "circle",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "cx",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "cy",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "r",
                                "type": "number",
                                "default": "0",
                                "desc": "外半径。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_ring",
                "type": "Object",
                "desc": "圆环。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "ring",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "cx",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "cy",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "r",
                                "type": "number",
                                "default": "0",
                                "desc": "外半径。",
                                "children": []
                            },
                            {
                                "name": "r0",
                                "type": "number",
                                "default": "0",
                                "desc": "内半径。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_sector",
                "type": "Object",
                "desc": "扇形。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "sector",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "cx",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "cy",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "r",
                                "type": "number",
                                "default": "0",
                                "desc": "外半径。",
                                "children": []
                            },
                            {
                                "name": "r0",
                                "type": "number",
                                "default": "0",
                                "desc": "内半径。",
                                "children": []
                            },
                            {
                                "name": "startAngle",
                                "type": "number",
                                "default": "0",
                                "desc": "开始弧度。",
                                "children": []
                            },
                            {
                                "name": "endAngle",
                                "type": "number",
                                "default": "Math.PI * 2",
                                "desc": "结束弧度。",
                                "children": []
                            },
                            {
                                "name": "clockwise",
                                "type": "boolean",
                                "default": "true",
                                "desc": "是否顺时针。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_arc",
                "type": "Object",
                "desc": "圆弧。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "arc",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "cx",
                                "type": "number",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的横坐标值。",
                                "children": []
                            },
                            {
                                "name": "cy",
                                "type": "numbr",
                                "default": "0",
                                "desc": "图形元素的中心在父节点坐标系（以父节点左上角为原点）中的纵坐标值。",
                                "children": []
                            },
                            {
                                "name": "r",
                                "type": "number",
                                "default": "0",
                                "desc": "外半径。",
                                "children": []
                            },
                            {
                                "name": "r0",
                                "type": "number",
                                "default": "0",
                                "desc": "内半径。",
                                "children": []
                            },
                            {
                                "name": "startAngle",
                                "type": "number",
                                "default": "0",
                                "desc": "开始弧度。",
                                "children": []
                            },
                            {
                                "name": "endAngle",
                                "type": "number",
                                "default": "Math.PI * 2",
                                "desc": "结束弧度。",
                                "children": []
                            },
                            {
                                "name": "clockwise",
                                "type": "boolean",
                                "default": "true",
                                "desc": "是否顺时针。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "null",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "\"#000\"",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "1",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_polygon",
                "type": "Object",
                "desc": "多边形。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "polygon",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "points",
                                "type": "Array",
                                "desc": "点列表，用于定义形状，如 `[[22, 44], [44, 55], [11, 44], ...]`",
                                "children": []
                            },
                            {
                                "name": "smooth",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "default": "undefined",
                                "desc": "是否平滑曲线。\n\n+ 如果为 number：表示贝塞尔 (bezier) 差值平滑，smooth 指定了平滑等级，范围 `[0, 1]`。\n+ 如果为 `'spline'`：表示 Catmull-Rom spline 差值平滑。",
                                "children": []
                            },
                            {
                                "name": "smoothConstraint",
                                "type": "boolean",
                                "default": "false",
                                "desc": "是否将平滑曲线约束在包围盒中。`smooth` 为 `number`（bezier）时生效。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_polyline",
                "type": "Object",
                "desc": "折线。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "polyline",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "points",
                                "type": "Array",
                                "desc": "点列表，用于定义形状，如 `[[22, 44], [44, 55], [11, 44], ...]`",
                                "children": []
                            },
                            {
                                "name": "smooth",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "default": "undefined",
                                "desc": "是否平滑曲线。\n\n+ 如果为 number：表示贝塞尔 (bezier) 差值平滑，smooth 指定了平滑等级，范围 `[0, 1]`。\n+ 如果为 `'spline'`：表示 Catmull-Rom spline 差值平滑。",
                                "children": []
                            },
                            {
                                "name": "smoothConstraint",
                                "type": "boolean",
                                "default": "false",
                                "desc": "是否将平滑曲线约束在包围盒中。`smooth` 为 `number`（bezier）时生效。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "null",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "\"#000\"",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "5",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_line",
                "type": "Object",
                "desc": "直线。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "line",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "x1",
                                "type": "number",
                                "default": "0",
                                "desc": "开始点的 x 值。",
                                "children": []
                            },
                            {
                                "name": "y1",
                                "type": "number",
                                "default": "0",
                                "desc": "开始点的 y 值。",
                                "children": []
                            },
                            {
                                "name": "x2",
                                "type": "number",
                                "default": "0",
                                "desc": "结束点的 x 值。",
                                "children": []
                            },
                            {
                                "name": "y2",
                                "type": "number",
                                "default": "0",
                                "desc": "结束点的 y 值。",
                                "children": []
                            },
                            {
                                "name": "percent",
                                "type": "number",
                                "default": "1",
                                "desc": "线画到百分之多少就不画了。值的范围：[0, 1]。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "null",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "\"#000\"",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "5",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            },
            {
                "name": "return_bezierCurve",
                "type": "Object",
                "desc": "二次或三次贝塞尔曲线。",
                "children": [
                    {
                        "name": "type",
                        "type": "string",
                        "default": "bezierCurve",
                        "desc": "用 setOption 首次设定图形元素时必须指定。\n可取值：\n\n\n\n[image](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_image),\n[text](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_text),\n[circle](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_circle),\n[sector](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_sector),\n[ring](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_ring),\n[polygon](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon),\n[polyline](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polyline),\n[rect](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_rect),\n[line](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_line),\n[bezierCurve](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_bezierCurve),\n[arc](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_arc),\n[group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group),",
                        "children": []
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "default": "undefined",
                        "desc": "id 用于在更新或删除图形元素时指定更新哪个图形元素，如果不需要用可以忽略。",
                        "children": []
                    },
                    {
                        "name": "position",
                        "type": "Array",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "rotation",
                        "type": "number",
                        "default": "0",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "scale",
                        "type": "Array",
                        "default": "[1, 1]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "origin",
                        "type": "number",
                        "default": "[0, 0]",
                        "desc": "图形元素可以进行标准的 `2D transform`，其中包含：\n+ [平移（position）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.position)：默认值是 `[0, 0]`。表示 `[横向平移的距离, 纵向平移的距离]`。右和下为正值。\n+ [旋转（rotation）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.rotation)：默认值是 0。表示旋转的弧度值。正值表示逆时针旋转。\n+ [缩放（scale）](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.scale)：默认值是 `[1, 1]`。表示 `[横向缩放的倍数, 纵向缩放的倍数]`。\n\n其中，[origin](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.origin) 指定了旋转和缩放的中心点，默认值是 `[0, 0]`。\n\n注意：\n+ transform 中设定的坐标，都是相对于图形元素的父元素的（即 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 元素或者顶层画布）的 `[0, 0]` 点。也就是说，我们可以使用 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 来组织多个图形元素，并且 [group](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_group) 可以嵌套。\n+ 对于一个图形元素，`transform` 执行的顺序是：先缩放（scale），再旋转（rotation），再平移（position）。",
                        "children": []
                    },
                    {
                        "name": "z2",
                        "type": "number",
                        "default": "undefined",
                        "desc": "用于决定图形元素的覆盖关系。",
                        "children": []
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "default": "undefined",
                        "desc": "参见 [diffChildrenByName](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.diffChildrenByName)。\n\n\n\n\n\n#### info\n\n用户定义的任意数据，可以在 event listener 中访问，如：\n\n```js\nchart.on('click', function (params) {\nconsole.log(params.info);\n});\n```",
                        "children": []
                    },
                    {
                        "name": "silent",
                        "type": "boolean",
                        "default": "false",
                        "desc": "是否不响应鼠标以及触摸事件。",
                        "children": []
                    },
                    {
                        "name": "invisible",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否可见。",
                        "children": []
                    },
                    {
                        "name": "ignore",
                        "type": "boolean",
                        "default": "false",
                        "desc": "节点是否完全被忽略（既不渲染，也不响应事件）。",
                        "children": []
                    },
                    {
                        "name": "shape",
                        "type": "Object",
                        "desc": "",
                        "children": [
                            {
                                "name": "x1",
                                "type": "number",
                                "default": "0",
                                "desc": "开始点的 x 值。",
                                "children": []
                            },
                            {
                                "name": "y1",
                                "type": "number",
                                "default": "0",
                                "desc": "开始点的 y 值。",
                                "children": []
                            },
                            {
                                "name": "x2",
                                "type": "number",
                                "default": "0",
                                "desc": "结束点的 x 值。",
                                "children": []
                            },
                            {
                                "name": "y2",
                                "type": "number",
                                "default": "0",
                                "desc": "结束点的 y 值。",
                                "children": []
                            },
                            {
                                "name": "cpx1",
                                "type": "number",
                                "default": "0",
                                "desc": "控制点 x 值。",
                                "children": []
                            },
                            {
                                "name": "cpy1",
                                "type": "number",
                                "default": "0",
                                "desc": "控制点 y 值。",
                                "children": []
                            },
                            {
                                "name": "cpx2",
                                "type": "number",
                                "default": "null",
                                "desc": "第二个控制点 x 值。如果设置则开启三阶贝塞尔曲线。",
                                "children": []
                            },
                            {
                                "name": "cpy2",
                                "type": "number",
                                "default": "null",
                                "desc": "第二个控制点 y 值。如果设置则开启三阶贝塞尔曲线。",
                                "children": []
                            },
                            {
                                "name": "percent",
                                "type": "number",
                                "default": "1",
                                "desc": "画到百分之多少就不画了。值的范围：[0, 1]。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "style",
                        "type": "Object",
                        "desc": "注：关于图形元素中更多的样式设置（例如 [富文本标签](tutorial.html#%E5%AF%8C%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE)），参见 [zrender/graphic/Displayable](https://ecomfe.github.io/zrender-doc/public/api.html#zrenderdisplayable) 中的 style 相关属性。\n\n注意，这里图形元素的样式属性名称直接源于 zrender，和 `echarts label`、`echarts itemStyle` 等处同样含义的样式属性名称或有不同。例如，有如下对应：\n\n+ [itemStyle.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.fill`\n+ [itemStyle.borderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.stroke`\n+ [label.color](https://echarts.apache.org/zh/option.html#series-scatter.label.color) => `style.textFill`\n+ [label.textBorderColor](https://echarts.apache.org/zh/option.html#series-scatter.label.textBorderColor) => `style.textStroke`\n+ ...",
                        "children": [
                            {
                                "name": "fill",
                                "type": "string",
                                "default": "'#000'",
                                "desc": "填充色。",
                                "children": []
                            },
                            {
                                "name": "stroke",
                                "type": "string",
                                "default": "null",
                                "desc": "笔画颜色。",
                                "children": []
                            },
                            {
                                "name": "lineWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "笔画宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影宽度。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 X 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影 Y 方向偏移。",
                                "children": []
                            },
                            {
                                "name": "shadowColor",
                                "type": "number",
                                "default": "undefined",
                                "desc": "阴影颜色。",
                                "children": []
                            }
                        ]
                    },
                    {
                        "name": "styleEmphasis",
                        "type": "Object",
                        "desc": "图形元素高亮时的样式。\n结构同 [style](https://echarts.apache.org/zh/option.html#series-custom.renderItem.return_polygon.style) 相同。",
                        "children": []
                    }
                ]
            }
        ]
    },
    {
        "name": "itemStyle",
        "type": "color",
        "desc": "图形样式。\n\n\n\n\n\n### color(Color)=自适应\n\n\n\n图形的颜色。 默认从全局调色盘 [option.color](https://echarts.apache.org/zh/option.html#color) 获取颜色\n\n\n\n> 颜色可以使用 RGB 表示，比如 `'rgb(128, 128, 128)'`，如果想要加上 alpha 通道表示不透明度，可以使用 RGBA，比如 `'rgba(128, 128, 128, 0.5)'`，也可以使用十六进制格式，比如 `'#ccc'`。除了纯色之外颜色也支持渐变色和纹理填充\n> ```js\n> // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n> color: {\n>     type: 'linear',\n>     x: 0,\n>     y: 0,\n>     x2: 0,\n>     y2: 1,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 径向渐变，前三个参数分别是圆心 x, y 和半径，取值同线性渐变\n> color: {\n>     type: 'radial',\n>     x: 0.5,\n>     y: 0.5,\n>     r: 0.5,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 纹理填充\n> color: {\n>     image: imageDom, // 支持为 HTMLImageElement, HTMLCanvasElement，不支持路径字符串\n>     repeat: 'repeat' // 是否平铺，可以是 'repeat-x', 'repeat-y', 'no-repeat'\n> }\n> ```",
        "children": [
            {
                "name": "borderColor",
                "type": "color",
                "default": "\"#000\"",
                "desc": "图形的描边颜色。支持的颜色格式同 `color`，不支持回调函数。",
                "children": []
            },
            {
                "name": "borderWidth",
                "type": "number",
                "default": "0",
                "desc": "描边线宽。为 0 时无描边。",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "borderType",
                "type": "enum",
                "desc": "柱条的描边类型，默认为实线，支持 `'solid'`, `'dashed'`, `'dotted'`。",
                "children": [],
                "options": "'solid','dashed','dotted'"
            },
            {
                "name": "shadowBlur",
                "type": "number",
                "default": "",
                "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```js\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                "children": [],
                "min": "0",
                "step": "0.5"
            },
            {
                "name": "shadowColor",
                "type": "color",
                "default": "",
                "desc": "阴影颜色。支持的格式同`color`。",
                "children": []
            },
            {
                "name": "shadowOffsetX",
                "type": "number",
                "default": "0",
                "desc": "阴影水平方向上的偏移距离。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "shadowOffsetY",
                "type": "number",
                "default": "0",
                "desc": "阴影垂直方向上的偏移距离。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "opacity",
                "type": "number",
                "default": "1",
                "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。",
                "children": [],
                "min": "0",
                "max": "1",
                "step": "0.01"
            }
        ]
    },
    {
        "name": "emphasis",
        "type": "Object",
        "desc": "高亮图形样式",
        "children": [
            {
                "name": "itemStyle",
                "type": "color",
                "desc": "#### color(Color)=自适应\n\n\n\n图形的颜色。\n\n\n\n> 颜色可以使用 RGB 表示，比如 `'rgb(128, 128, 128)'`，如果想要加上 alpha 通道表示不透明度，可以使用 RGBA，比如 `'rgba(128, 128, 128, 0.5)'`，也可以使用十六进制格式，比如 `'#ccc'`。除了纯色之外颜色也支持渐变色和纹理填充\n> ```js\n> // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n> color: {\n>     type: 'linear',\n>     x: 0,\n>     y: 0,\n>     x2: 0,\n>     y2: 1,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 径向渐变，前三个参数分别是圆心 x, y 和半径，取值同线性渐变\n> color: {\n>     type: 'radial',\n>     x: 0.5,\n>     y: 0.5,\n>     r: 0.5,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 纹理填充\n> color: {\n>     image: imageDom, // 支持为 HTMLImageElement, HTMLCanvasElement，不支持路径字符串\n>     repeat: 'repeat' // 是否平铺，可以是 'repeat-x', 'repeat-y', 'no-repeat'\n> }\n> ```",
                "children": [
                    {
                        "name": "borderColor",
                        "type": "color",
                        "default": "\"#000\"",
                        "desc": "图形的描边颜色。支持的颜色格式同 `color`，不支持回调函数。",
                        "children": []
                    },
                    {
                        "name": "borderWidth",
                        "type": "number",
                        "default": "0",
                        "desc": "描边线宽。为 0 时无描边。",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "borderType",
                        "type": "enum",
                        "desc": "柱条的描边类型，默认为实线，支持 `'solid'`, `'dashed'`, `'dotted'`。",
                        "children": [],
                        "options": "'solid','dashed','dotted'"
                    },
                    {
                        "name": "shadowBlur",
                        "type": "number",
                        "default": "",
                        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```js\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "shadowColor",
                        "type": "color",
                        "default": "",
                        "desc": "阴影颜色。支持的格式同`color`。",
                        "children": []
                    },
                    {
                        "name": "shadowOffsetX",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影水平方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "shadowOffsetY",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影垂直方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "opacity",
                        "type": "number",
                        "default": "1",
                        "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。",
                        "children": [],
                        "min": "0",
                        "max": "1",
                        "step": "0.01"
                    }
                ]
            }
        ]
    },
    {
        "name": "dimensions",
        "type": "Array",
        "desc": "使用 dimensions 定义 `series.data` 或者 `dataset.source` 的每个维度的信息。\n\n注意：如果使用了 [dataset](https://echarts.apache.org/zh/option.html#dataset)，那么可以在 [dataset.source](https://echarts.apache.org/zh/option.html#dataset.source) 的第一行/列中给出 dimension 名称。于是就不用在这里指定 dimension。但是，如果在这里指定了 `dimensions`，那么 ECharts 不再会自动从 `dataset.source` 的第一行/列中获取维度信息。\n\n例如：\n\n```js\noption = {\ndataset: {\nsource: [\n// 有了上面 dimensions 定义后，下面这五个维度的名称分别为：\n// 'date', 'open', 'close', 'highest', 'lowest'\n[12, 44, 55, 66, 2],\n[23, 6, 16, 23, 1],\n...\n]\n},\nseries: {\ntype: 'xxx',\n// 定义了每个维度的名称。这个名称会被显示到默认的 tooltip 中。\ndimensions: ['date', 'open', 'close', 'highest', 'lowest']\n}\n}\n```\n\n```js\nseries: {\ntype: 'xxx',\ndimensions: [\nnull,                // 如果此维度不想给出定义，则使用 null 即可\n{type: 'ordinal'},   // 只定义此维度的类型。\n// 'ordinal' 表示离散型，一般文本使用这种类型。\n// 如果类型没有被定义，会自动猜测类型。\n{name: 'good', type: 'number'},\n'bad'                // 等同于 {name: 'bad'}\n]\n}\n```\n\n`dimensions` 数组中的每一项可以是：\n+ `string`，如 `'someName'`，等同于 `{name: 'someName'}`\n+ `Object`，属性可以有：\n+ name: `string`。\n+ type: `string`，支持\n+ `number`，默认，表示普通数据。\n+ `ordinal`，对于类目、文本这些 string 类型的数据，如果需要能在数轴上使用，须是 'ordinal' 类型。ECharts 默认会自动判断这个类型。但是自动判断也是不可能很完备的，所以使用者也可以手动强制指定。\n+ `float`，即 [Float64Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array)。\n+ `int`，即 [Int32Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array)。\n+ `time`，表示时间类型。设置成 'time' 则能支持自动解析数据成时间戳（timestamp），比如该维度的数据是 '2017-05-10'，会自动被解析。时间类型的支持参见 [data](https://echarts.apache.org/zh/option.html#series.data)。\n+ displayName: 一般用于 tooltip 中维度名的展示。`string` 如果没有指定，默认使用 name 来展示。\n\n值得一提的是，当定义了 `dimensions` 后，默认 `tooltip` 中对个维度的显示，会变为『竖排』，从而方便显示每个维度的名称。如果没有定义 `dimensions`，则默认 `tooltip` 会横排显示，且只显示数值没有维度名称可显示。",
        "children": []
    },
    {
        "name": "encode",
        "type": "Object",
        "desc": "可以定义 `data` 的哪个维度被编码成什么。比如：\n\n```js\noption = {\ndataset: {\nsource: [\n// 每一列称为一个『维度』。\n// 这里分别是维度 0、1、2、3、4。\n[12, 44, 55, 66, 2],\n[23, 6, 16, 23, 1],\n...\n]\n},\nseries: {\ntype: 'xxx',\nencode: {\nx: [3, 1, 5],      // 表示维度 3、1、5 映射到 x 轴。\ny: 2,              // 表示维度 2 映射到 y 轴。\ntooltip: [3, 2, 4] // 表示维度 3、2、4 会在 tooltip 中显示。\n}\n}\n}\n```\n\n当使用 [dimensions](https://echarts.apache.org/zh/option.html#series.dimensions) 给维度定义名称后，`encode` 中可直接引用名称，例如：\n\n```js\nseries: {\ntype: 'xxx',\ndimensions: ['date', 'open', 'close', 'highest', 'lowest'],\nencode: {\nx: 'date',\ny: ['open', 'close', 'highest', 'lowest']\n}\n}\n```\n\n`encode` 声明的基本结构如下，其中冒号左边是坐标系、标签等特定名称，如 `'x'`, `'y'`, `'tooltip'` 等，冒号右边是数据中的维度名（string 格式）或者维度的序号（number 格式，从 0 开始计数），可以指定一个或多个维度（使用数组）。通常情况下，下面各种信息不需要所有的都写，按需写即可。\n\n下面是 encode 支持的属性：\n\n```js\n// 在任何坐标系和系列中，都支持：\nencode: {\n// 使用 “名为 product 的维度” 和 “名为 score 的维度” 的值在 tooltip 中显示\ntooltip: ['product', 'score']\n// 使用 “维度 1” 和 “维度 3” 的维度名连起来作为系列名。（有时候名字比较长，这可以避免在 series.name 重复输入这些名字）\nseriesName: [1, 3],\n// 表示使用 “维度2” 中的值作为 id。这在使用 setOption 动态更新数据时有用处，可以使新老数据用 id 对应起来，从而能够产生合适的数据更新动画。\nitemId: 2,\n// 指定数据项的名称使用 “维度3” 在饼图等图表中有用，可以使这个名字显示在图例（legend）中。\nitemName: 3\n}\n\n// 直角坐标系（grid/cartesian）特有的属性：\nencode: {\n// 把 “维度1”、“维度5”、“名为 score 的维度” 映射到 X 轴：\nx: [1, 5, 'score'],\n// 把“维度0”映射到 Y 轴。\ny: 0\n}\n\n// 单轴（singleAxis）特有的属性：\nencode: {\nsingle: 3\n}\n\n// 极坐标系（polar）特有的属性：\nencode: {\nradius: 3,\nangle: 2\n}\n\n// 地理坐标系（geo）特有的属性：\nencode: {\nlng: 3,\nlat: 2\n}\n\n// 对于一些没有坐标系的图表，例如饼图、漏斗图等，可以是：\nencode: {\nvalue: 3\n}\n```\n\n这是个更丰富的 `encode` 的[示例](dataset-encode1&edit=1&reset=1)：\n\n\n\n特殊地，在 [自定义系列（custom series）](https://echarts.apache.org/zh/option.html#series-custom) 中，`encode` 中轴可以不指定或设置为 `null/undefined`，从而使系列免于受这个轴控制，也就是说，轴的范围（extent）不会受此系列数值的影响，轴被 [dataZoom](https://echarts.apache.org/zh/option.html#dataZoom) 控制时也不会过滤掉这个系列：\n\n```js\nvar option = {\nxAxis: {},\nyAxis: {},\ndataZoom: [{\nxAxisIndex: 0\n}, {\nyAxisIndex: 0\n}],\nseries: {\ntype: 'custom',\nrenderItem: function (params, api) {\nreturn {\ntype: 'circle',\nshape: {\ncx: 100, // x 位置永远为 100\ncy: api.coord([0, api.value(0)])[1],\nr: 30\n},\nstyle: {\nfill: 'blue'\n}\n};\n},\nencode: {\n// 这样这个系列就不会被 x 轴以及 x\n// 轴上的 dataZoom 控制了。\nx: -1,\ny: 1\n},\ndata: [ ... ]\n}\n};\n```",
        "children": []
    },
    {
        "name": "seriesLayoutBy",
        "type": "string",
        "default": "'column'",
        "desc": "当使用 [dataset](https://echarts.apache.org/zh/option.html#dataset) 时，`seriesLayoutBy` 指定了 `dataset` 中用行还是列对应到系列上，也就是说，系列“排布”到 `dataset` 的行还是列上。可取值：\n\n+ 'column'：默认，`dataset` 的列对应于系列，从而 `dataset` 中每一列是一个维度（dimension）。\n+ 'row'：`dataset` 的行对应于系列，从而 `dataset` 中每一行是一个维度（dimension）。\n\n参见这个 [示例](dataset-series-layout-by&theme=lite)",
        "children": []
    },
    {
        "name": "datasetIndex",
        "type": "number",
        "default": "0",
        "desc": "如果 [series.data](https://echarts.apache.org/zh/option.html#series.data) 没有指定，并且 [dataset](https://echarts.apache.org/zh/option.html#dataset) 存在，那么就会使用 [dataset](https://echarts.apache.org/zh/option.html#dataset)。`datasetIndex` 指定本系列使用那个 [dataset](https://echarts.apache.org/zh/option.html#dataset)。",
        "children": []
    },
    {
        "name": "data",
        "type": "Array",
        "desc": "系列中的数据内容数组。数组项通常为具体的数据项。\n\n注意，如果系列没有指定 `data`，并且 option 有 [dataset](https://echarts.apache.org/zh/option.html#dataset)，那么默认使用第一个 [dataset](https://echarts.apache.org/zh/option.html#dataset)。如果指定了 `data`，则不会再使用 [dataset](https://echarts.apache.org/zh/option.html#dataset)。\n\n可以使用 `series.datasetIndex` 指定其他的 [dataset](https://echarts.apache.org/zh/option.html#dataset)。\n\n通常来说，数据用一个二维数组表示。如下，每一列被称为一个『维度』。\n```js\nseries: [{\ndata: [\n// 维度X   维度Y   其他维度 ...\n[  3.4,    4.5,   15,   43],\n[  4.2,    2.3,   20,   91],\n[  10.8,   9.5,   30,   18],\n[  7.2,    8.8,   18,   57]\n]\n}]\n```\n\n+ 在 [直角坐标系 (grid)](https://echarts.apache.org/zh/option.html#grid) 中『维度X』和『维度Y』会默认对应于 [xAxis](https://echarts.apache.org/zh/option.html#xAxis) 和 [yAxis](https://echarts.apache.org/zh/option.html#yAxis)。\n+ 在 [极坐标系 (polar)](https://echarts.apache.org/zh/option.html#polar) 中『维度X』和『维度Y』会默认对应于 [radiusAxis](https://echarts.apache.org/zh/option.html#radiusAxis) 和 [angleAxis](https://echarts.apache.org/zh/option.html#anbleAxis)。\n+ 后面的其他维度是可选的，可以在别处被使用，例如：\n+ 在 [visualMap](https://echarts.apache.org/zh/option.html#visualMap) 中可以将一个或多个维度映射到颜色，大小等多个图形属性上。\n+ 在 [series.symbolSize](https://echarts.apache.org/zh/option.html#series.symbolSize) 中可以使用回调函数，基于某个维度得到 symbolSize 值。\n+ 使用 [tooltip.formatter](https://echarts.apache.org/zh/option.html#tooltip.formatter) 或 [series.label.formatter](https://echarts.apache.org/zh/option.html#series.label.formatter) 可以把其他维度的值展示出来。\n\n特别地，当只有一个轴为类目轴（axis.type 为 `'category'`）的时候，数据可以简化用一个一维数组表示。例如：\n```js\nxAxis: {\ndata: ['a', 'b', 'm', 'n']\n},\nseries: [{\n// 与 xAxis.data 一一对应。\ndata: [23,  44,  55,  19]\n// 它其实是下面这种形式的简化：\n// data: [[0, 23], [1, 44], [2, 55], [3, 19]]\n}]\n```\n\n<br>\n**『值』与 [轴类型](https://echarts.apache.org/zh/option.html#xAxis.type) 的关系：**\n\n+ 当某维度对应于数值轴（axis.type 为 `'value'` 或者 `'log'`）的时候：\n\n其值可以为 `number`（例如 `12`）。（也可以兼容 `string` 形式的 number，例如 `'12'`）\n\n+ 当某维度对应于类目轴（axis.type 为 `'category'`）的时候：\n\n其值须为类目的『序数』（从 `0` 开始）或者类目的『字符串值』。例如：\n```js\nxAxis: {\ntype: 'category',\ndata: ['星期一', '星期二', '星期三', '星期四']\n},\nyAxis: {\ntype: 'category',\ndata: ['a', 'b', 'm', 'n', 'p', 'q']\n},\nseries: [{\ndata: [\n// xAxis    yAxis\n[  0,        0,    2  ], // 意思是此点位于 xAxis: '星期一', yAxis: 'a'。\n[  '星期四',  2,    1  ], // 意思是此点位于 xAxis: '星期四', yAxis: 'm'。\n[  2,       'p',   2  ], // 意思是此点位于 xAxis: '星期三', yAxis: 'p'。\n[  3,        3,    5  ]\n]\n}]\n```\n双类目轴的示例可以参考 [Github Punchcard](scatter-punchCard) 示例。\n\n+ 当某维度对应于时间轴（type 为 `'time'`）的时候，值可以为：\n+ 一个时间戳，如 `1484141700832`，表示 UTC 时间。\n+ 或者字符串形式的时间描述：\n+ [ISO 8601](http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) 的子集，只包含这些形式（这几种格式，除非指明时区，否则均表示本地时间，与 [moment](https://momentjs.com/) 一致）：\n+ 部分年月日时间: `'2012-03'`, `'2012-03-01'`, `'2012-03-01 05'`, `'2012-03-01 05:06'`.\n+ 使用 `'T'` 或空格分割: `'2012-03-01T12:22:33.123'`, `'2012-03-01 12:22:33.123'`.\n+ 时区设定: `'2012-03-01T12:22:33Z'`, `'2012-03-01T12:22:33+8000'`, `'2012-03-01T12:22:33-05:00'`.\n+ 其他的时间字符串，包括（均表示本地时间）:\n`'2012'`, `'2012-3-1'`, `'2012/3/1'`, `'2012/03/01'`,\n`'2009/6/12 2:00'`, `'2009/6/12 2:05:08'`, `'2009/6/12 2:05:08.123'`\n+ 或者用户自行初始化的 Date 实例：\n+ 注意，用户自行初始化 Date 实例的时候，[浏览器的行为有差异，不同字符串的表示也不同](http://dygraphs.com/date-formats.html)。\n+ 例如：在 chrome 中，`new Date('2012-01-01')` 表示 UTC 时间的 2012 年 1 月 1 日，而 `new Date('2012-1-1')` 和 `new Date('2012/01/01')` 表示本地时间的 2012 年 1 月 1 日。在 safari 中，不支持 `new Date('2012-1-1')` 这种表示方法。\n+ 所以，使用 `new Date(dataString)` 时，可使用第三方库解析（如 [moment](https://momentjs.com/)），或者使用 `echarts.number.parseDate`，或者参见 [这里](http://dygraphs.com/date-formats.html)。\n\n<br>\n**当需要对个别数据进行个性化定义时：**\n\n数组项可用对象，其中的 `value` 像表示具体的数值，如：\n```js\n[\n12,\n34,\n{\nvalue : 56,\n//自定义标签样式，仅对该数据项有效\nlabel: {},\n//自定义特殊 itemStyle，仅对该数据项有效\nitemStyle:{}\n},\n10\n]\n// 或\n[\n[12, 33],\n[34, 313],\n{\nvalue: [56, 44],\nlabel: {},\nitemStyle:{}\n},\n[10, 33]\n]\n```\n\n<br>\n**空值：**\n\n当某数据不存在时（ps：*不存在*不代表值为 0），可以用 `'-'` 或者 `null` 或者 `undefined` 或者 `NaN` 表示。\n\n例如，无数据在折线图中可表现为该点是断开的，在其它图中可表示为图形不存在。\n\n<br><br>",
        "children": [
            {
                "name": "name",
                "type": "string",
                "desc": "数据项名称。",
                "children": []
            },
            {
                "name": "value",
                "type": "number",
                "desc": "单个数据项的数值。",
                "children": []
            },
            {
                "name": "itemStyle",
                "type": "color",
                "desc": "#### color(Color)=自适应\n\n\n\n图形的颜色。\n\n\n\n> 颜色可以使用 RGB 表示，比如 `'rgb(128, 128, 128)'`，如果想要加上 alpha 通道表示不透明度，可以使用 RGBA，比如 `'rgba(128, 128, 128, 0.5)'`，也可以使用十六进制格式，比如 `'#ccc'`。除了纯色之外颜色也支持渐变色和纹理填充\n> ```js\n> // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n> color: {\n>     type: 'linear',\n>     x: 0,\n>     y: 0,\n>     x2: 0,\n>     y2: 1,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 径向渐变，前三个参数分别是圆心 x, y 和半径，取值同线性渐变\n> color: {\n>     type: 'radial',\n>     x: 0.5,\n>     y: 0.5,\n>     r: 0.5,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 纹理填充\n> color: {\n>     image: imageDom, // 支持为 HTMLImageElement, HTMLCanvasElement，不支持路径字符串\n>     repeat: 'repeat' // 是否平铺，可以是 'repeat-x', 'repeat-y', 'no-repeat'\n> }\n> ```",
                "children": [
                    {
                        "name": "borderColor",
                        "type": "color",
                        "default": "\"#000\"",
                        "desc": "图形的描边颜色。支持的颜色格式同 `color`，不支持回调函数。",
                        "children": []
                    },
                    {
                        "name": "borderWidth",
                        "type": "number",
                        "default": "0",
                        "desc": "描边线宽。为 0 时无描边。",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "borderType",
                        "type": "enum",
                        "desc": "柱条的描边类型，默认为实线，支持 `'solid'`, `'dashed'`, `'dotted'`。",
                        "children": [],
                        "options": "'solid','dashed','dotted'"
                    },
                    {
                        "name": "shadowBlur",
                        "type": "number",
                        "default": "",
                        "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```js\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    },
                    {
                        "name": "shadowColor",
                        "type": "color",
                        "default": "",
                        "desc": "阴影颜色。支持的格式同`color`。",
                        "children": []
                    },
                    {
                        "name": "shadowOffsetX",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影水平方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "shadowOffsetY",
                        "type": "number",
                        "default": "0",
                        "desc": "阴影垂直方向上的偏移距离。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "opacity",
                        "type": "number",
                        "default": "1",
                        "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。",
                        "children": [],
                        "min": "0",
                        "max": "1",
                        "step": "0.01"
                    }
                ]
            },
            {
                "name": "emphasis",
                "type": "Object",
                "desc": "",
                "children": [
                    {
                        "name": "itemStyle",
                        "type": "color",
                        "desc": "##### color(Color)=自适应\n\n\n\n图形的颜色。\n\n\n\n> 颜色可以使用 RGB 表示，比如 `'rgb(128, 128, 128)'`，如果想要加上 alpha 通道表示不透明度，可以使用 RGBA，比如 `'rgba(128, 128, 128, 0.5)'`，也可以使用十六进制格式，比如 `'#ccc'`。除了纯色之外颜色也支持渐变色和纹理填充\n> ```js\n> // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n> color: {\n>     type: 'linear',\n>     x: 0,\n>     y: 0,\n>     x2: 0,\n>     y2: 1,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 径向渐变，前三个参数分别是圆心 x, y 和半径，取值同线性渐变\n> color: {\n>     type: 'radial',\n>     x: 0.5,\n>     y: 0.5,\n>     r: 0.5,\n>     colorStops: [{\n>         offset: 0, color: 'red' // 0% 处的颜色\n>     }, {\n>         offset: 1, color: 'blue' // 100% 处的颜色\n>     }],\n>     global: false // 缺省为 false\n> }\n> // 纹理填充\n> color: {\n>     image: imageDom, // 支持为 HTMLImageElement, HTMLCanvasElement，不支持路径字符串\n>     repeat: 'repeat' // 是否平铺，可以是 'repeat-x', 'repeat-y', 'no-repeat'\n> }\n> ```",
                        "children": [
                            {
                                "name": "borderColor",
                                "type": "color",
                                "default": "\"#000\"",
                                "desc": "图形的描边颜色。支持的颜色格式同 `color`，不支持回调函数。",
                                "children": []
                            },
                            {
                                "name": "borderWidth",
                                "type": "number",
                                "default": "0",
                                "desc": "描边线宽。为 0 时无描边。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "borderType",
                                "type": "enum",
                                "desc": "柱条的描边类型，默认为实线，支持 `'solid'`, `'dashed'`, `'dotted'`。",
                                "children": [],
                                "options": "'solid','dashed','dotted'"
                            },
                            {
                                "name": "shadowBlur",
                                "type": "number",
                                "default": "",
                                "desc": "图形阴影的模糊大小。该属性配合 `shadowColor`,`shadowOffsetX`, `shadowOffsetY` 一起设置图形的阴影效果。\n\n示例：\n```js\n{\nshadowColor: 'rgba(0, 0, 0, 0.5)',\nshadowBlur: 10\n}\n```",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            },
                            {
                                "name": "shadowColor",
                                "type": "color",
                                "default": "",
                                "desc": "阴影颜色。支持的格式同`color`。",
                                "children": []
                            },
                            {
                                "name": "shadowOffsetX",
                                "type": "number",
                                "default": "0",
                                "desc": "阴影水平方向上的偏移距离。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "shadowOffsetY",
                                "type": "number",
                                "default": "0",
                                "desc": "阴影垂直方向上的偏移距离。",
                                "children": [],
                                "step": "0.5"
                            },
                            {
                                "name": "opacity",
                                "type": "number",
                                "default": "1",
                                "desc": "图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。\n\n\n\n\n\n\n\n\n\n\n### tooltip\n\n本系列每个数据项中特定的 tooltip 设定。",
                                "children": [],
                                "min": "0",
                                "max": "1",
                                "step": "0.01"
                            }
                        ]
                    },
                    {
                        "name": "position",
                        "type": [
                            "string",
                            "Array",
                            "Function"
                        ],
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的位置，默认不设置时位置会跟随鼠标的位置。\n\n可选：\n\n+ `Array`\n\n通过数组表示提示框浮层的位置，支持数字设置绝对位置，百分比设置相对位置。\n\n示例:\n\n```js\n// 绝对位置，相对于容器左侧 10px, 上侧 10 px\nposition: [10, 10]\n// 相对位置，放置在容器正中间\nposition: ['50%', '50%']\n```\n\n+ `Function`\n\n回调函数，格式如下：\n```js\n(point: Array, params: Object|Array.<Object>, dom: HTMLDomElement, rect: Object, size: Object) => Array\n```\n\n**参数：**<br>\npoint: 鼠标位置，如 [20, 40]。<br>\nparams: 同 formatter 的参数相同。<br>\ndom: tooltip 的 dom 对象。<br>\nrect: 只有鼠标在图形上时有效，是一个用`x`, `y`, `width`, `height`四个属性表达的图形包围盒。<br>\nsize: 包括 dom 的尺寸和 echarts 容器的当前尺寸，例如：`{contentSize: [width, height], viewSize: [width, height]}`。<br>\n\n**返回值：**<br>\n可以是一个表示 tooltip 位置的数组，数组值可以是绝对的像素值，也可以是相  百分比。<br>\n也可以是一个对象，如：`{left: 10, top: 30}`，或者 `{right: '20%', bottom: 40}`。<br>\n\n如下示例：\n```js\nposition: function (point, params, dom, rect, size) {\n// 固定在顶部\nreturn [point[0], '10%'];\n}\n```\n或者：\n```js\nposition: function (pos, params, dom, rect, size) {\n// 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\nvar obj = {top: 60};\nobj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\nreturn obj;\n}\n```\n\n\n+ `'inside'`\n\n鼠标所在图形的内部中心位置，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'top'`\n\n鼠标所在图形上侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'left'`\n\n鼠标所在图形左侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'right'`\n\n鼠标所在图形右侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'bottom'`\n\n鼠标所在图形底侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。",
                        "children": []
                    },
                    {
                        "name": "formatter",
                        "type": [
                            "string",
                            "Function"
                        ],
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层内容格式器，支持字符串模板和回调函数两种形式。\n\n**1, 字符串模板**\n\n模板变量有 `{a}`, `{b}`，`{c}`，`{d}`，`{e}`，分别表示系列名，数据名，数据值等。\n在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'axis'` 的时候，会有多个系列的数据，此时可以通过 `{a0}`, `{a1}`, `{a2}` 这种后面加索引的方式表示系列的索引。\n不同图表类型下的 `{a}`，`{b}`，`{c}`，`{d}` 含义不一样。\n其中变量`{a}`, `{b}`, `{c}`, `{d}`在不同图表类型下代表数据含义为：\n\n+ 折线（区域）图、柱状（条形）图、K线图 : `{a}`（系列名称），`{b}`（类目值），`{c}`（数值）, `{d}`（无）\n\n+ 散点图（气泡）图 : `{a}`（系列名称），`{b}`（数据名称），`{c}`（数值数组）, `{d}`（无）\n\n+ 地图 : `{a}`（系列名称），`{b}`（区域名称），`{c}`（合并数值）, `{d}`（无）\n\n+ 饼图、仪表盘、漏斗图: `{a}`（系列名称），`{b}`（数据项名称），`{c}`（数值）, `{d}`（百分比）\n\n更多其它图表模板变量的含义可以见相应的图表的 label.formatter 配置项。\n\n**示例：**\n```js\nformatter: '{b0}: {c0}<br />{b1}: {c1}'\n```\n\n\n**2, 回调函数**\n\n回调函数格式：\n\n```js\n(params: Object|Array, ticket: string, callback: (ticket: string, html: string)) => string\n```\n\n第一个参数 `params` 是 formatter 需要的数据集。格式如下：\n\n```js\n{\ncomponentType: 'series',\n// 系列类型\nseriesType: string,\n// 系列在传入的 option.series 中的 index\nseriesIndex: number,\n// 系列名称\nseriesName: string,\n// 数据名，类目名\nname: string,\n// 数据在传入的 data 数组中的 index\ndataIndex: number,\n// 传入的原始数据项\ndata: Object,\n// 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\nvalue: number|Array|Object,\n// 坐标轴 encode 映射信息，\n// key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n// value 必然为数组，不会为 null/undefied，表示 dimension index 。\n// 其内容如：\n// {\n//     x: [2] // dimension index 为 2 的数据映射到 x 轴\n//     y: [0] // dimension index 为 0 的数据映射到 y 轴\n// }\nencode: Object,\n// 维度名列表\ndimensionNames: Array<String>,\n// 数据的维度 index，如 0 或 1 或 2 ...\n// 仅在雷达图中使用。\ndimensionIndex: number,\n// 数据图形的颜色\ncolor: string,\n\n}\n```\n\n注：encode 和 dimensionNames 的使用方式，例如：\n\n如果数据为：\n```js\ndataset: {\nsource: [\n['Matcha Latte', 43.3, 85.8, 93.7],\n['Milk Tea', 83.1, 73.4, 55.1],\n['Cheese Cocoa', 86.4, 65.2, 82.5],\n['Walnut Brownie', 72.4, 53.9, 39.1]\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.encode.y[0]]\n```\n\n如果数据为：\n```js\ndataset: {\ndimensions: ['product', '2015', '2016', '2017'],\nsource: [\n{product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n{product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n{product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n{product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.dimensionNames[params.encode.y[0]]]\n```\n\n\n\n在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'axis'` 的时候，或者 tooltip 被 [axisPointer](https://echarts.apache.org/zh/option.html#xAxis.axisPointer) 触发的时候，`params` 是多个系列的数据数组。其中每项内容格式同上，并且，\n\n\n```js\n{\ncomponentType: 'series',\n// 系列类型\nseriesType: string,\n// 系列在传入的 option.series 中的 index\nseriesIndex: number,\n// 系列名称\nseriesName: string,\n// 数据名，类目名\nname: string,\n// 数据在传入的 data 数组中的 index\ndataIndex: number,\n// 传入的原始数据项\ndata: Object,\n// 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\nvalue: number|Array|Object,\n// 坐标轴 encode 映射信息，\n// key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n// value 必然为数组，不会为 null/undefied，表示 dimension index 。\n// 其内容如：\n// {\n//     x: [2] // dimension index 为 2 的数据映射到 x 轴\n//     y: [0] // dimension index 为 0 的数据映射到 y 轴\n// }\nencode: Object,\n// 维度名列表\ndimensionNames: Array<String>,\n// 数据的维度 index，如 0 或 1 或 2 ...\n// 仅在雷达图中使用。\ndimensionIndex: number,\n// 数据图形的颜色\ncolor: string,\n\n}\n```\n\n注：encode 和 dimensionNames 的使用方式，例如：\n\n如果数据为：\n```js\ndataset: {\nsource: [\n['Matcha Latte', 43.3, 85.8, 93.7],\n['Milk Tea', 83.1, 73.4, 55.1],\n['Cheese Cocoa', 86.4, 65.2, 82.5],\n['Walnut Brownie', 72.4, 53.9, 39.1]\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.encode.y[0]]\n```\n\n如果数据为：\n```js\ndataset: {\ndimensions: ['product', '2015', '2016', '2017'],\nsource: [\n{product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n{product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n{product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n{product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.dimensionNames[params.encode.y[0]]]\n```\n\n\n\n**注：** ECharts 2.x 使用数组表示各参数的方式不再支持。\n\n第二个参数 `ticket` 是异步回调标识，配合第三个参数 `callback` 使用。\n第三个参数 `callback` 是异步回调，在提示框浮层内容是异步获取的时候，可以通过 callback 传入上述的 `ticket` 和 `html` 更新提示框浮层内容。\n\n示例：\n```js\nformatter: function (params, ticket, callback) {\n$.get('detail?name=' + params.name, function (content) {\ncallback(ticket, toHTML(content));\n});\nreturn 'Loading';\n}\n```",
                        "children": []
                    },
                    {
                        "name": "backgroundColor",
                        "type": "Color",
                        "default": "'rgba(50,50,50,0.7)'",
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的背景颜色。",
                        "children": []
                    },
                    {
                        "name": "borderColor",
                        "type": "color",
                        "default": "'#333'",
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的边框颜色。",
                        "children": []
                    },
                    {
                        "name": "borderWidth",
                        "type": "number",
                        "default": "0",
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的边框宽。",
                        "children": [],
                        "step": "0.5"
                    },
                    {
                        "name": "padding",
                        "type": "vector",
                        "default": "5",
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。\n\n使用示例：\n```js\n// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n5,  // 上\n10, // 右\n5,  // 下\n10, // 左\n]\n```",
                        "children": [],
                        "dims": "T,R,B,L"
                    },
                    {
                        "name": "textStyle",
                        "type": "number",
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的文本样式。\n\n\n\n\n\n\n\n##### color(Color)='#fff'\n\n\n\n文字的颜色。\n\n\n\n\n\n##### fontStyle(string)='normal'\n\n\n\n文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`\n\n\n##### fontWeight(string|number)=normal\n\n\n\n文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...\n\n\n##### fontFamily(string)='sans-serif'\n\n\n\n文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...\n\n##### fontSize(number)=14\n\n\n\n文字的字体大小。",
                        "children": [
                            {
                                "name": "lineHeight",
                                "type": "number",
                                "default": "12",
                                "desc": "行高。\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```js\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
                                "children": [],
                                "min": "0",
                                "step": "1"
                            },
                            {
                                "name": "width",
                                "type": [
                                    "number",
                                    "string"
                                ],
                                "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                                "children": []
                            },
                            {
                                "name": "height",
                                "type": "number",
                                "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。\n\n##### textBorderColor(Color)='transparent'\n\n\n\n文字本身的描边颜色。\n\n\n\n##### textBorderWidth(number)=0\n\n\n\n文字本身的描边宽度。\n\n##### textShadowColor(Color)='transparent'\n\n\n\n文字本身的阴影颜色。\n\n##### textShadowBlur(number)=0\n\n\n\n文字本身的阴影长度。\n\n##### textShadowOffsetX(number)=0\n\n\n\n文字本身的阴影 X 偏移。\n\n##### textShadowOffsetY(number)=0\n\n\n\n文字本身的阴影 Y 偏移。",
                                "children": [],
                                "min": "0",
                                "step": "0.5"
                            }
                        ],
                        "options": "'normal','italic','oblique'",
                        "default": "14",
                        "min": "1",
                        "step": "1"
                    },
                    {
                        "name": "extraCssText",
                        "type": "string",
                        "desc": "> **注意：**`series.data.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n额外附加到浮层的 css 样式。如下为浮层添加阴影的示例：\n\n```js\nextraCssText: 'box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);'\n```",
                        "children": []
                    }
                ]
            }
        ]
    },
    {
        "name": "clip",
        "type": "boolean",
        "default": "false",
        "desc": "> 从 `v` 开始支持\n\n\n\n\n是否裁剪超出坐标系部分的图形，具体裁剪效果根据系列决定：\n\n+ 散点图：忽略中心点超出坐标系的图形，但是不裁剪单个图形\n+ 柱状图：裁掉所有超出坐标系的部分，但是依然保留柱子的宽度\n+ 折线图：裁掉所有超出坐标系的折线部分，拐点图形的逻辑按照散点图处理\n+ 路径图：裁掉所有超出坐标系的部分\n+ K 线图：忽略整体都超出坐标系的图形，但是不裁剪单个图形\n+ 自定义系列：裁掉所有超出坐标系的部分\n\n除了自定义系列，其它系列的默认值都为 true，及开启裁剪，如果你觉得不想要裁剪的话，可以设置成 false 关闭。",
        "children": []
    },
    {
        "name": "zlevel",
        "type": "number",
        "default": "0",
        "desc": "自定义图所有图形的 zlevel 值。\n\n`zlevel`用于 Canvas 分层，不同`zlevel`值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的`zlevel`。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。\n\n`zlevel` 大的 Canvas 会放在 `zlevel` 小的 Canvas 的上面。",
        "children": []
    },
    {
        "name": "z",
        "type": "number",
        "default": "2",
        "desc": "自定义图组件的所有图形的`z`值。控制图形的前后顺序。`z`值小的图形会被`z`值大的图形覆盖。\n\n`z`相比`zlevel`优先级更低，而且不会创建新的 Canvas。",
        "children": []
    },
    {
        "name": "silent",
        "type": "boolean",
        "default": "false",
        "desc": "图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。",
        "children": []
    },
    {
        "name": "animation",
        "type": "boolean",
        "default": "true",
        "desc": "是否开启动画。",
        "children": []
    },
    {
        "name": "animationThreshold",
        "type": "number",
        "default": "2000",
        "desc": "是否开启动画的阈值，当单个系列显示的图形数量大于这个阈值时会关闭动画。",
        "children": []
    },
    {
        "name": "animationDuration",
        "type": "number",
        "default": "1000",
        "desc": "初始动画的时长，支持回调函数，可以通过每个数据返回不同的时长实现更戏剧的初始动画效果：\n\n```js\nanimationDuration: function (idx) {\n// 越往后的数据时长越大\nreturn idx * 100;\n}\n```",
        "children": [],
        "min": "0",
        "step": "20"
    },
    {
        "name": "animationEasing",
        "type": "enum",
        "desc": "初始动画的缓动效果。不同的缓动效果可以参考 [缓动示例](line-easing)。",
        "children": [],
        "options": "'linear','quadraticIn','quadraticOut','quadraticInOut','cubicIn','cubicOut','cubicInOut','quarticIn','quarticOut','quarticInOut','quinticIn','quinticOut','quinticInOut','sinusoidalIn','sinusoidalOut','sinusoidalInOut','exponentialIn','exponentialOut','exponentialInOut','circularIn','circularOut','circularInOut','elasticIn','elasticOut','elasticInOut','backIn','backOut','backInOut','bounceIn','bounceOut','bounceInOut'"
    },
    {
        "name": "animationDelay",
        "type": [
            "number",
            "Function"
        ],
        "default": "0",
        "desc": "初始动画的延迟，支持回调函数，可以通过每个数据返回不同的 delay 时间实现更戏剧的初始动画效果。\n\n如下示例：\n```js\nanimationDelay: function (idx) {\n// 越往后的数据延迟越大\nreturn idx * 100;\n}\n```\n\n也可以看[该示例](bar-animation-delay)",
        "children": []
    },
    {
        "name": "animationDurationUpdate",
        "type": "number",
        "default": "300",
        "desc": "数据更新动画的时长。\n\n支持回调函数，可以通过每个数据返回不同的时长实现更戏剧的更新动画效果：\n\n```js\nanimationDurationUpdate: function (idx) {\n// 越往后的数据时长越大\nreturn idx * 100;\n}\n```",
        "children": [],
        "min": "0",
        "step": "20"
    },
    {
        "name": "animationEasingUpdate",
        "type": "enum",
        "desc": "数据更新动画的缓动效果。",
        "children": [],
        "options": "'linear','quadraticIn','quadraticOut','quadraticInOut','cubicIn','cubicOut','cubicInOut','quarticIn','quarticOut','quarticInOut','quinticIn','quinticOut','quinticInOut','sinusoidalIn','sinusoidalOut','sinusoidalInOut','exponentialIn','exponentialOut','exponentialInOut','circularIn','circularOut','circularInOut','elasticIn','elasticOut','elasticInOut','backIn','backOut','backInOut','bounceIn','bounceOut','bounceInOut'"
    },
    {
        "name": "animationDelayUpdate",
        "type": [
            "number",
            "Function"
        ],
        "default": "0",
        "desc": "数据更新动画的延迟，支持回调函数，可以通过每个数据返回不同的 delay 时间实现更戏剧的更新动画效果。\n\n如下示例：\n```js\nanimationDelayUpdate: function (idx) {\n// 越往后的数据延迟越大\nreturn idx * 100;\n}\n```\n\n也可以看[该示例](bar-animation-delay)",
        "children": []
    },
    {
        "name": "tooltip",
        "type": "Object",
        "desc": "本系列特定的 tooltip 设定。",
        "children": [
            {
                "name": "position",
                "type": [
                    "string",
                    "Array",
                    "Function"
                ],
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的位置，默认不设置时位置会跟随鼠标的位置。\n\n可选：\n\n+ `Array`\n\n通过数组表示提示框浮层的位置，支持数字设置绝对位置，百分比设置相对位置。\n\n示例:\n\n```js\n// 绝对位置，相对于容器左侧 10px, 上侧 10 px\nposition: [10, 10]\n// 相对位置，放置在容器正中间\nposition: ['50%', '50%']\n```\n\n+ `Function`\n\n回调函数，格式如下：\n```js\n(point: Array, params: Object|Array.<Object>, dom: HTMLDomElement, rect: Object, size: Object) => Array\n```\n\n**参数：**<br>\npoint: 鼠标位置，如 [20, 40]。<br>\nparams: 同 formatter 的参数相同。<br>\ndom: tooltip 的 dom 对象。<br>\nrect: 只有鼠标在图形上时有效，是一个用`x`, `y`, `width`, `height`四个属性表达的图形包围盒。<br>\nsize: 包括 dom 的尺寸和 echarts 容器的当前尺寸，例如：`{contentSize: [width, height], viewSize: [width, height]}`。<br>\n\n**返回值：**<br>\n可以是一个表示 tooltip 位置的数组，数组值可以是绝对的像素值，也可以是相  百分比。<br>\n也可以是一个对象，如：`{left: 10, top: 30}`，或者 `{right: '20%', bottom: 40}`。<br>\n\n如下示例：\n```js\nposition: function (point, params, dom, rect, size) {\n// 固定在顶部\nreturn [point[0], '10%'];\n}\n```\n或者：\n```js\nposition: function (pos, params, dom, rect, size) {\n// 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\nvar obj = {top: 60};\nobj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\nreturn obj;\n}\n```\n\n\n+ `'inside'`\n\n鼠标所在图形的内部中心位置，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'top'`\n\n鼠标所在图形上侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'left'`\n\n鼠标所在图形左侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'right'`\n\n鼠标所在图形右侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。\n\n+ `'bottom'`\n\n鼠标所在图形底侧，只在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为`'item'`的时候有效。",
                "children": []
            },
            {
                "name": "formatter",
                "type": [
                    "string",
                    "Function"
                ],
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层内容格式器，支持字符串模板和回调函数两种形式。\n\n**1, 字符串模板**\n\n模板变量有 `{a}`, `{b}`，`{c}`，`{d}`，`{e}`，分别表示系列名，数据名，数据值等。\n在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'axis'` 的时候，会有多个系列的数据，此时可以通过 `{a0}`, `{a1}`, `{a2}` 这种后面加索引的方式表示系列的索引。\n不同图表类型下的 `{a}`，`{b}`，`{c}`，`{d}` 含义不一样。\n其中变量`{a}`, `{b}`, `{c}`, `{d}`在不同图表类型下代表数据含义为：\n\n+ 折线（区域）图、柱状（条形）图、K线图 : `{a}`（系列名称），`{b}`（类目值），`{c}`（数值）, `{d}`（无）\n\n+ 散点图（气泡）图 : `{a}`（系列名称），`{b}`（数据名称），`{c}`（数值数组）, `{d}`（无）\n\n+ 地图 : `{a}`（系列名称），`{b}`（区域名称），`{c}`（合并数值）, `{d}`（无）\n\n+ 饼图、仪表盘、漏斗图: `{a}`（系列名称），`{b}`（数据项名称），`{c}`（数值）, `{d}`（百分比）\n\n更多其它图表模板变量的含义可以见相应的图表的 label.formatter 配置项。\n\n**示例：**\n```js\nformatter: '{b0}: {c0}<br />{b1}: {c1}'\n```\n\n\n**2, 回调函数**\n\n回调函数格式：\n\n```js\n(params: Object|Array, ticket: string, callback: (ticket: string, html: string)) => string\n```\n\n第一个参数 `params` 是 formatter 需要的数据集。格式如下：\n\n```js\n{\ncomponentType: 'series',\n// 系列类型\nseriesType: string,\n// 系列在传入的 option.series 中的 index\nseriesIndex: number,\n// 系列名称\nseriesName: string,\n// 数据名，类目名\nname: string,\n// 数据在传入的 data 数组中的 index\ndataIndex: number,\n// 传入的原始数据项\ndata: Object,\n// 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\nvalue: number|Array|Object,\n// 坐标轴 encode 映射信息，\n// key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n// value 必然为数组，不会为 null/undefied，表示 dimension index 。\n// 其内容如：\n// {\n//     x: [2] // dimension index 为 2 的数据映射到 x 轴\n//     y: [0] // dimension index 为 0 的数据映射到 y 轴\n// }\nencode: Object,\n// 维度名列表\ndimensionNames: Array<String>,\n// 数据的维度 index，如 0 或 1 或 2 ...\n// 仅在雷达图中使用。\ndimensionIndex: number,\n// 数据图形的颜色\ncolor: string,\n\n}\n```\n\n注：encode 和 dimensionNames 的使用方式，例如：\n\n如果数据为：\n```js\ndataset: {\nsource: [\n['Matcha Latte', 43.3, 85.8, 93.7],\n['Milk Tea', 83.1, 73.4, 55.1],\n['Cheese Cocoa', 86.4, 65.2, 82.5],\n['Walnut Brownie', 72.4, 53.9, 39.1]\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.encode.y[0]]\n```\n\n如果数据为：\n```js\ndataset: {\ndimensions: ['product', '2015', '2016', '2017'],\nsource: [\n{product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n{product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n{product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n{product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.dimensionNames[params.encode.y[0]]]\n```\n\n\n\n在 [trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'axis'` 的时候，或者 tooltip 被 [axisPointer](https://echarts.apache.org/zh/option.html#xAxis.axisPointer) 触发的时候，`params` 是多个系列的数据数组。其中每项内容格式同上，并且，\n\n\n```js\n{\ncomponentType: 'series',\n// 系列类型\nseriesType: string,\n// 系列在传入的 option.series 中的 index\nseriesIndex: number,\n// 系列名称\nseriesName: string,\n// 数据名，类目名\nname: string,\n// 数据在传入的 data 数组中的 index\ndataIndex: number,\n// 传入的原始数据项\ndata: Object,\n// 传入的数据值。在多数系列下它和 data 相同。在一些系列下是 data 中的分量（如 map、radar 中）\nvalue: number|Array|Object,\n// 坐标轴 encode 映射信息，\n// key 为坐标轴（如 'x' 'y' 'radius' 'angle' 等）\n// value 必然为数组，不会为 null/undefied，表示 dimension index 。\n// 其内容如：\n// {\n//     x: [2] // dimension index 为 2 的数据映射到 x 轴\n//     y: [0] // dimension index 为 0 的数据映射到 y 轴\n// }\nencode: Object,\n// 维度名列表\ndimensionNames: Array<String>,\n// 数据的维度 index，如 0 或 1 或 2 ...\n// 仅在雷达图中使用。\ndimensionIndex: number,\n// 数据图形的颜色\ncolor: string,\n\n}\n```\n\n注：encode 和 dimensionNames 的使用方式，例如：\n\n如果数据为：\n```js\ndataset: {\nsource: [\n['Matcha Latte', 43.3, 85.8, 93.7],\n['Milk Tea', 83.1, 73.4, 55.1],\n['Cheese Cocoa', 86.4, 65.2, 82.5],\n['Walnut Brownie', 72.4, 53.9, 39.1]\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.encode.y[0]]\n```\n\n如果数据为：\n```js\ndataset: {\ndimensions: ['product', '2015', '2016', '2017'],\nsource: [\n{product: 'Matcha Latte', '2015': 43.3, '2016': 85.8, '2017': 93.7},\n{product: 'Milk Tea', '2015': 83.1, '2016': 73.4, '2017': 55.1},\n{product: 'Cheese Cocoa', '2015': 86.4, '2016': 65.2, '2017': 82.5},\n{product: 'Walnut Brownie', '2015': 72.4, '2016': 53.9, '2017': 39.1}\n]\n}\n```\n则可这样得到 y 轴对应的 value：\n```js\nparams.value[params.dimensionNames[params.encode.y[0]]]\n```\n\n\n\n**注：** ECharts 2.x 使用数组表示各参数的方式不再支持。\n\n第二个参数 `ticket` 是异步回调标识，配合第三个参数 `callback` 使用。\n第三个参数 `callback` 是异步回调，在提示框浮层内容是异步获取的时候，可以通过 callback 传入上述的 `ticket` 和 `html` 更新提示框浮层内容。\n\n示例：\n```js\nformatter: function (params, ticket, callback) {\n$.get('detail?name=' + params.name, function (content) {\ncallback(ticket, toHTML(content));\n});\nreturn 'Loading';\n}\n```",
                "children": []
            },
            {
                "name": "backgroundColor",
                "type": "Color",
                "default": "'rgba(50,50,50,0.7)'",
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的背景颜色。",
                "children": []
            },
            {
                "name": "borderColor",
                "type": "color",
                "default": "'#333'",
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的边框颜色。",
                "children": []
            },
            {
                "name": "borderWidth",
                "type": "number",
                "default": "0",
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的边框宽。",
                "children": [],
                "step": "0.5"
            },
            {
                "name": "padding",
                "type": "vector",
                "default": "5",
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。\n\n使用示例：\n```js\n// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n5,  // 上\n10, // 右\n5,  // 下\n10, // 左\n]\n```",
                "children": [],
                "dims": "T,R,B,L"
            },
            {
                "name": "textStyle",
                "type": "number",
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n提示框浮层的文本样式。\n\n\n\n\n\n\n\n#### color(Color)='#fff'\n\n\n\n文字的颜色。\n\n\n\n\n\n#### fontStyle(string)='normal'\n\n\n\n文字字体的风格。\n\n可选：\n+ `'normal'`\n+ `'italic'`\n+ `'oblique'`\n\n\n#### fontWeight(string|number)=normal\n\n\n\n文字字体的粗细。\n\n可选：\n+ `'normal'`\n+ `'bold'`\n+ `'bolder'`\n+ `'lighter'`\n+ 100 | 200 | 300 | 400...\n\n\n#### fontFamily(string)='sans-serif'\n\n\n\n文字的字体系列。\n\n还可以是 'serif' , 'monospace', 'Arial', 'Courier New', 'Microsoft YaHei', ...\n\n#### fontSize(number)=14\n\n\n\n文字的字体大小。",
                "children": [
                    {
                        "name": "lineHeight",
                        "type": "number",
                        "default": "12",
                        "desc": "行高。\n\n\n`rich` 中如果没有设置 `lineHeight`，则会取父层级的 `lineHeight`。例如：\n\n```js\n{\nlineHeight: 56,\nrich: {\na: {\n// 没有设置 `lineHeight`，则 `lineHeight` 为 56\n}\n}\n}\n```",
                        "children": [],
                        "min": "0",
                        "step": "1"
                    },
                    {
                        "name": "width",
                        "type": [
                            "number",
                            "string"
                        ],
                        "desc": "文字块的宽度。一般不用指定，不指定则自动是文字的宽度。在想做表格项或者使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n`width` 也可以是百分比字符串，如 `'100%'`。表示的是所在文本块的 `contentWidth`（即不包含文本块的 `padding`）的百分之多少。之所以以 `contentWidth` 做基数，因为每个文本片段只能基于 `content box` 布局。如果以 `outerWidth` 做基数，则百分比的计算在实用中不具有意义，可能会超出。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。",
                        "children": []
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "desc": "文字块的高度。一般不用指定，不指定则自动是文字的高度。在使用图片（参见 `backgroundColor`）时，可能会使用它。\n\n注意，文字块的 `width` 和 `height` 指定的是内容高宽，不包含 `padding`。\n\n注意，如果不定义 `rich` 属性，则不能指定 `width` 和 `height`。\n\n#### textBorderColor(Color)='transparent'\n\n\n\n文字本身的描边颜色。\n\n\n\n#### textBorderWidth(number)=0\n\n\n\n文字本身的描边宽度。\n\n#### textShadowColor(Color)='transparent'\n\n\n\n文字本身的阴影颜色。\n\n#### textShadowBlur(number)=0\n\n\n\n文字本身的阴影长度。\n\n#### textShadowOffsetX(number)=0\n\n\n\n文字本身的阴影 X 偏移。\n\n#### textShadowOffsetY(number)=0\n\n\n\n文字本身的阴影 Y 偏移。",
                        "children": [],
                        "min": "0",
                        "step": "0.5"
                    }
                ],
                "options": "'normal','italic','oblique'",
                "default": "14",
                "min": "1",
                "step": "1"
            },
            {
                "name": "extraCssText",
                "type": "string",
                "desc": "<br>\n> **注意：**`series.tooltip` 仅在 [tooltip.trigger](https://echarts.apache.org/zh/option.html#tooltip.trigger) 为 `'item'` 时有效。<br>\n\n\n\n\n\n\n\n\n\n\n\n\n额外附加到浮层的 css 样式。如下为浮层添加阴影的示例：\n\n```js\nextraCssText: 'box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);'\n```",
                "children": []
            }
        ]
    }
]